import{_ as e,c as t,o as r,ag as i}from"./chunks/framework.BHpayLOB.js";const c=JSON.parse('{"title":"Java 后端开发工程师零基础入门学习路线","description":"","frontmatter":{},"headers":[],"relativePath":"学习路线.md","filePath":"学习路线.md"}'),o={name:"学习路线.md"};function n(s,a,l,h,d,p){return r(),t("div",null,a[0]||(a[0]=[i('<h1 id="java-后端开发工程师零基础入门学习路线" tabindex="-1">Java 后端开发工程师零基础入门学习路线 <a class="header-anchor" href="#java-后端开发工程师零基础入门学习路线" aria-label="Permalink to &quot;Java 后端开发工程师零基础入门学习路线&quot;">​</a></h1><h2 id="一、阶段一-java-基础语法与核心特性-0-4-周" tabindex="-1">一、阶段一：Java 基础语法与核心特性（0-4 周） <a class="header-anchor" href="#一、阶段一-java-基础语法与核心特性-0-4-周" aria-label="Permalink to &quot;一、阶段一：Java 基础语法与核心特性（0-4 周）&quot;">​</a></h2><h3 id="一-核心知识点" tabindex="-1">（一）核心知识点 <a class="header-anchor" href="#一-核心知识点" aria-label="Permalink to &quot;（一）核心知识点&quot;">​</a></h3><h5 id="开发环境搭建" tabindex="-1">开发环境搭建 <a class="header-anchor" href="#开发环境搭建" aria-label="Permalink to &quot;开发环境搭建&quot;">​</a></h5><p>JDK 安装与环境变量配置（JAVA_HOME、Path 配置） IDE 选择（IntelliJ IDEA 社区版 / Eclipse，推荐 IDEA） 第一个 Java 程序（HelloWorld，理解编译、运行流程） 基础语法 变量、数据类型（int、String、boolean 等） 运算符（算术、逻辑、比较）与表达式 流程控制（if-else、for、while、switch） 面向对象编程（OOP） 类与对象、构造方法、成员变量 / 方法 封装（private + Getter/Setter）、继承（extends）、多态（方法重写 / 重载） 关键字：this、super、static、final 常用 API 字符串操作（String、StringBuilder 区别与使用） 集合框架基础（ArrayList 存储列表、HashMap 存储键值对） 异常处理（try-catch-finally、自定义异常） 进阶基础 IO 流（字节流 FileInputStream、字符流 FileReader 读写文件） 多线程基础（Thread、Runnable 实现，线程安全初步认知）</p><h2 id="二-学习资源推荐" tabindex="-1">（二）学习资源推荐 <a class="header-anchor" href="#二-学习资源推荐" aria-label="Permalink to &quot;（二）学习资源推荐&quot;">​</a></h2><p>书籍：《Java 核心技术 卷 I》（基础篇）、《Head First Java》（趣味入门） 在线课程：B 站「尚硅谷 Java 零基础教程」、慕课网「Java 入门到实战」 文档：Oracle 官方 Java Tutorial（<a href="https://docs.oracle.com/javase/tutorial%EF%BC%89" target="_blank" rel="noreferrer">https://docs.oracle.com/javase/tutorial）</a> （三）实践建议 编写小工具：命令行计算器（支持加减乘除）、学生信息管理系统（控制台版，增删改查） 代码规范：学习 《阿里巴巴 Java 开发手册（泰山版）》，养成注释、命名好习惯 二、阶段二：Web 开发基础与框架入门（3-6 周） （一）核心知识点 Web 基础 HTTP 协议（请求 / 响应流程、状态码 200/404/500、请求头 Cookie/Session） Servlet 入门（HttpServlet、doGet/doPost 方法、请求参数获取） JSP 与 EL 表达式（了解动态页面渲染，现代开发中逐渐弱化，但需知基础） 框架核心（SSM 初体验） Spring IoC：依赖注入（@Autowired）、Bean 管理（XML / 注解配置） SpringMVC：Controller 编写、@RequestMapping 映射、前后端参数交互 MyBatis：Mapper 接口、XML 映射文件（select/insert 标签）、SQL 编写 数据库基础（MySQL） 数据库 / 表创建（CREATE DATABASE/TABLE、字段类型设计） 增删改查（CRUD，SELECT * FROM、INSERT INTO 等基础 SQL） 连接池（了解 Druid/HikariCP 配置，优化数据库连接） （二）学习资源推荐 框架文档：Spring 官方指南（<a href="https://spring.io/guides%EF%BC%89%E3%80%81MyBatis" target="_blank" rel="noreferrer">https://spring.io/guides）、MyBatis</a> 官方手册（<a href="https://mybatis.org/mybatis-3/zh/index.html%EF%BC%89" target="_blank" rel="noreferrer">https://mybatis.org/mybatis-3/zh/index.html）</a> 实战课程：B 站「黑马程序员 Spring 框架教程」、慕课网「SSM 框架整合实战」 数据库书籍：《MySQL 必知必会》（短小精悍，快速上手） （三）实践建议 搭建基础 Web 项目：用 SSM 框架 实现「用户登录注册」功能（含简单前端页面 + 后端接口） 数据库设计：设计「博客系统」表结构（用户表、文章表、评论表，练习外键关联） 三、阶段三：工具链与工程化（2-3 周） （一）核心知识点 项目构建与依赖管理 Maven 基础（pom.xml 配置、依赖引入、mvn clean/package 命令） 常用依赖（Spring、MyBatis、MySQL 驱动等） 版本控制 Git 基础（commit、push、pull、分支管理 git branch/merge） 代码托管（GitHub/Gitee 仓库初始化、提交实践） 调试与排查 IDEA 调试技巧（断点调试、查看变量、堆栈信息定位问题） 日志分析（配置 log4j/logback，通过日志排查异常） （二）学习资源推荐 Maven 指南：<a href="https://maven.apache.org/guides/getting-started/" target="_blank" rel="noreferrer">https://maven.apache.org/guides/getting-started/</a> Git 教程：廖雪峰 Git 教程（<a href="https://www.liaoxuefeng.com/wiki/896043488029600%EF%BC%89" target="_blank" rel="noreferrer">https://www.liaoxuefeng.com/wiki/896043488029600）</a> 调试技巧：IDEA 官方文档「Debug 部分」 （三）实践建议 重构项目：将之前的 Java 项目改造为 Maven 工程（通过 pom.xml 管理依赖） 版本管理：为练习项目创建 Git 仓库，模拟「多人协作」（自己分分支开发、合并） 四、阶段四：数据库进阶与中间件（2-3 周） （一）核心知识点 数据库进阶 复杂查询（联表查询 JOIN、分组查询 GROUP BY、子查询） 事务与锁（ACID 特性、COMMIT/ROLLBACK、乐观锁 / 悲观锁实践） 索引优化（用 EXPLAIN 分析 SQL，创建 INDEX 提升查询效率） 中间件与拓展 Redis 基础（安装、数据结构 String/Hash、缓存使用场景） 消息队列初步（了解 RabbitMQ/Kafka 基本概念，非必须但可拓展视野） （二）学习资源推荐 数据库优化：《高性能 MySQL》（选读「索引」「事务」基础章节） Redis 教程：Redis 官方文档（<a href="https://redis.io/docs/getting-started/%EF%BC%89%E3%80%81B" target="_blank" rel="noreferrer">https://redis.io/docs/getting-started/）、B</a> 站「狂神说 Redis」 中间件课程：慕课网「消息队列入门」 （三）实践建议 优化项目：给「用户系统」添加 Redis 缓存（登录态、高频数据缓存） 数据库实战：编写复杂报表 SQL（如统计「每月活跃用户」「订单趋势」） 五、阶段五：项目实战与总结（2-4 周） （一）目标项目 选择 1-2 个综合项目，串联所有知识：</p><ol><li>基础版：「在线博客系统」 功能：用户管理（登录 / 注册）、文章发布 / 编辑、评论互动、分类标签 技术栈：SpringMVC + MyBatis + MySQL + Redis（缓存） + Maven + Git</li><li>进阶版：「电商后台管理系统」 功能：商品管理、订单流程、权限控制（可选 Spring Security/Shiro） 技术栈：SpringBoot（替代 SSM，简化配置，现代开发主流） （二）学习重点 需求分析：梳理功能模块，绘制简单流程图（如用户登录流程） 分层开发：严格遵循 MVC 模式（Controller、Service、DAO 层分离） 部署尝试：用 Docker 简单部署 MySQL/Redis（可选，了解基础运维） （三）复盘与拓展 代码评审：自查代码规范，模仿 GitHub 开源项目结构（如 SpringBoot 示例） 拓展学习：尝试 SpringBoot（简化配置，推荐过渡学习）、Swagger（接口文档生成）</li></ol>',8)]))}const S=e(o,[["render",n]]);export{c as __pageData,S as default};
