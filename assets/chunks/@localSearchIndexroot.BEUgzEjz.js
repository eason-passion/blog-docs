const t='{"documentCount":130,"nextId":130,"documentIds":{"0":"/blog-docs/about.html#作者","1":"/blog-docs/about.html#一位在校大学生","2":"/blog-docs/api-examples.html#runtime-api-examples","3":"/blog-docs/api-examples.html#results","4":"/blog-docs/api-examples.html#theme-data","5":"/blog-docs/api-examples.html#page-data","6":"/blog-docs/api-examples.html#page-frontmatter","7":"/blog-docs/api-examples.html#more","8":"/blog-docs/backend/Redis/基础.html#测试","9":"/blog-docs/backend/Redis/基础.html#二级标题","10":"/blog-docs/backend/Redis/基础.html#三级标题","11":"/blog-docs/backend/Redis/基础.html#custom-containers","12":"/blog-docs/backend/Redis/高级.html#hhhhh","13":"/blog-docs/backend/Redis/高级.html#kskdklkop","14":"/blog-docs/backend/Redis/进阶.html#测试","15":"/blog-docs/backend/Redis/进阶.html#二级标题","16":"/blog-docs/backend/Redis/进阶.html#三级标题","17":"/blog-docs/backend/Redis/进阶.html#custom-containers","18":"/blog-docs/backend/java/java基础.html#面向对象基础","19":"/blog-docs/backend/java/java基础.html#面向对象和面向过程的区别","20":"/blog-docs/backend/java/java基础.html#创建一个对象用什么运算符-对象实体与对象引用有何不同","21":"/blog-docs/backend/java/java基础.html#对象的相等和引用相等的区别","22":"/blog-docs/backend/java/java基础.html#方法重载和重写的区别","23":"/blog-docs/backend/java/java基础.html#构造方法有哪些特点-是否可被-override","24":"/blog-docs/backend/java/java基础.html#面向对象三大特性","25":"/blog-docs/backend/java/java基础.html#封装","26":"/blog-docs/backend/java/java基础.html#继承","27":"/blog-docs/backend/java/java基础.html#多态","28":"/blog-docs/backend/java/java基础.html#接口和抽象类有什么共同点和区别","29":"/blog-docs/backend/java/java基础.html#深拷贝和浅拷贝区别了解吗-什么是引用拷贝","30":"/blog-docs/backend/java/java基础.html#什么是深拷贝和浅拷贝","31":"/blog-docs/backend/java/java基础.html#java基础知识","32":"/blog-docs/backend/java/java基础.html#什么是值传递和引用传递","33":"/blog-docs/backend/java/java基础.html#c-和java的区别","34":"/blog-docs/backend/java/java基础.html#java关键字和保留字","35":"/blog-docs/backend/java/java基础.html#java的特点","36":"/blog-docs/backend/java/java基础.html#java是如何实现跨平台的","37":"/blog-docs/backend/java/java基础.html#为什么说-java-语言-编译与解释并存","38":"/blog-docs/backend/java/java基础.html#jdk-jre-jvm三者的关系","39":"/blog-docs/backend/java/java基础.html#java创建对象有几种方式","40":"/blog-docs/backend/java/java基础.html#说说类实例化的顺序","41":"/blog-docs/backend/java/java基础.html#java的4种引用类型","42":"/blog-docs/backend/java/java基础.html#java数据类型","43":"/blog-docs/backend/java/java基础.html#java的基本数据类型有哪些-每个占多少位","44":"/blog-docs/backend/java/java基础.html#了解java的包装类型吗-为什么需要包装类","45":"/blog-docs/backend/java/java基础.html#自动装箱与拆箱了解吗-原理是什么","46":"/blog-docs/backend/java/java基础.html#为什么浮点数运算的时候会有精度丢失的风险","47":"/blog-docs/backend/java/java基础.html#如何解决浮点数运算的精度丢失问题","48":"/blog-docs/backend/java/java基础.html#包装类型的缓存机制了解么","49":"/blog-docs/backend/java/java基础.html#object","50":"/blog-docs/backend/java/java基础.html#object常用方法有哪些","51":"/blog-docs/backend/java/java基础.html#equals和引用相等-的区别","52":"/blog-docs/backend/java/java基础.html#hashcode-有什么用","53":"/blog-docs/backend/java/java基础.html#为什么要有-hashcode","54":"/blog-docs/backend/java/java基础.html#为什么重写-equals-时一定要重写-hashcode","55":"/blog-docs/backend/java/java基础.html#两个对象的hashcode-相同-则-equals-是否也一定为-true","56":"/blog-docs/backend/java/java基础.html#string","57":"/blog-docs/backend/java/java基础.html#string-stringbuffer-和-stringbuilder区别","58":"/blog-docs/backend/java/java基础.html#string-为什么不可变","59":"/blog-docs/backend/java/java基础.html#为什么string要设计成不可变的","60":"/blog-docs/backend/java/java基础.html#string-equals-和-object-equals-有何区别","61":"/blog-docs/backend/java/java基础.html#什么是字符串常量池","62":"/blog-docs/backend/java/java基础.html#string-s-new-string-abc-会创建几个对象","63":"/blog-docs/backend/java/java基础.html#string-类的常用方法有哪些","64":"/blog-docs/backend/java/java基础.html#异常","65":"/blog-docs/backend/java/java基础.html#exception-和-error-有什么区别","66":"/blog-docs/backend/java/java基础.html#运行时异常-runtimeexception-和非运行时异常-checkedexecption-的区别","67":"/blog-docs/backend/java/java基础.html#throwable-类常用方法有哪些","68":"/blog-docs/backend/java/java基础.html#try-catch-finally-如何使用","69":"/blog-docs/backend/java/java基础.html#java中的finally一定会被执行吗","70":"/blog-docs/backend/java/java基础.html#throw和throws的区别","71":"/blog-docs/backend/java/java基础.html#泛型","72":"/blog-docs/backend/java/java基础.html#代理","73":"/blog-docs/backend/java/java基础.html#静态代理","74":"/blog-docs/backend/java/java基础.html#动态代理","75":"/blog-docs/backend/java/java基础.html#_1-jdk动态代理","76":"/blog-docs/backend/java/java基础.html#_2-cglib动态代理","77":"/blog-docs/backend/java/java基础.html#_3-静态代理和动态代理的对比","78":"/blog-docs/backend/java/java基础.html#序列化与反序列化","79":"/blog-docs/backend/java/java基础.html#什么是序列化-什么是反序列化","80":"/blog-docs/backend/java/java基础.html#常见应用场景","81":"/blog-docs/backend/java/java基础.html#如果有些字段不想进行序列化怎么办-transient关键字","82":"/blog-docs/backend/java/java基础.html#实现序列化和反序列化为什么要实现-serializable-接口","83":"/blog-docs/backend/java/java基础.html#static-属性为什么不会被序列化","84":"/blog-docs/backend/java/java基础.html#i-o流","85":"/blog-docs/backend/java/java基础.html#java-io-流了解吗","86":"/blog-docs/backend/java/java基础.html#i-o-流为什么要分为字节流和字符流呢","87":"/blog-docs/backend/java/反射.html#反射","88":"/blog-docs/backend/java/反射.html#什么是反射","89":"/blog-docs/backend/java/反射.html#反射应用场景","90":"/blog-docs/backend/java/反射.html#反射的优缺点","91":"/blog-docs/backend/mysql/mysql基础.html#mysql基础","92":"/blog-docs/backend/mysql/mysql基础.html#什么是关系型数据库","93":"/blog-docs/backend/mysql/mysql基础.html#数据库的三大范式","94":"/blog-docs/backend/mysql/mysql基础.html#mysql的架构-组成","95":"/blog-docs/backend/mysql/mysql基础.html#sql语句在mysql中的执行过程","96":"/blog-docs/backend/mysql/mysql基础.html#_1-查询语句执行流程","97":"/blog-docs/backend/mysql/mysql基础.html#_2-更新语句执行流程","98":"/blog-docs/backend/mysql/mysql基础.html#inner-join-left-join和right-join的区别","99":"/blog-docs/backend/mysql/mysql基础.html#mysql-是如何保证数据不丢失的","100":"/blog-docs/backend/mysql/mysql基础.html#什么会导致mysql-自增主键-id-不连续","101":"/blog-docs/backend/mysql/mysql基础.html#什么是sql注入-怎么解决","102":"/blog-docs/backend/mysql/mysql的存储引擎.html#存储引擎","103":"/blog-docs/backend/mysql/mysql的存储引擎.html#常见存储引擎","104":"/blog-docs/backend/mysql/mysql的存储引擎.html#myisam-和-innodb-有什么区别","105":"/blog-docs/backend/mysql/mysql的存储引擎.html#行级锁和表级锁","106":"/blog-docs/backend/mysql/mysql的存储引擎.html#行锁有哪几种","107":"/blog-docs/backend/mysql/mysql的存储引擎.html#innodb-数据页结构","108":"/blog-docs/backend/mysql/mysql的存储引擎.html#innodb-为什么要用自增-id-作为主键","109":"/blog-docs/backend/mysql/日志.html#日志","110":"/blog-docs/backend/mysql/日志.html#bin-log-redo-log-undo-log日志","111":"/blog-docs/backend/mysql/日志.html#它们是什么","112":"/blog-docs/backend/mysql/日志.html#undo-log-与redo-log的区别","113":"/blog-docs/backend/mysql/日志.html#bin-log和redo-log有什么区别","114":"/blog-docs/backend/mysql/日志.html#redo-log-的执行流程","115":"/blog-docs/backend/mysql/日志.html#为什么-redo-log-具有-crash-safe-的能力-是-binlog-无法替代的","116":"/blog-docs/bigModel/RAG 概念.html#rag-概念","117":"/blog-docs/bigModel/RAG 概念.html#什么是-rag","118":"/blog-docs/bigModel/RAG 概念.html#rag-工作流程","119":"/blog-docs/bigModel/RAG 概念.html#_1、文档收集和切割","120":"/blog-docs/bigModel/RAG 概念.html#_2、向量转换和存储","121":"/blog-docs/markdown-examples.html#markdown-extension-examples","122":"/blog-docs/markdown-examples.html#syntax-highlighting","123":"/blog-docs/markdown-examples.html#custom-containers","124":"/blog-docs/markdown-examples.html#more","125":"/blog-docs/学习路线.html#java-后端开发工程师零基础入门学习路线","126":"/blog-docs/学习路线.html#一、阶段一-java-基础语法与核心特性-0-4-周","127":"/blog-docs/学习路线.html#一-核心知识点","128":"/blog-docs/学习路线.html#开发环境搭建","129":"/blog-docs/学习路线.html#二-学习资源推荐"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[1,1,1],"1":[1,1,1],"2":[3,1,51],"3":[1,3,1],"4":[2,4,2],"5":[2,4,2],"6":[2,4,2],"7":[1,3,11],"8":[1,1,1],"9":[1,1,2],"10":[1,1,2],"11":[2,1,19],"12":[1,1,1],"13":[1,1,2],"14":[1,1,1],"15":[1,1,2],"16":[1,1,2],"17":[2,1,19],"18":[1,1,1],"19":[2,1,7],"20":[3,1,19],"21":[1,1,3],"22":[2,1,15],"23":[4,1,16],"24":[1,1,5],"25":[1,2,6],"26":[1,2,8],"27":[1,2,16],"28":[2,1,37],"29":[3,1,1],"30":[2,4,20],"31":[1,1,1],"32":[2,1,13],"33":[1,1,53],"34":[1,1,181],"35":[1,1,34],"36":[2,1,22],"37":[5,1,44],"38":[3,1,64],"39":[2,1,13],"40":[1,1,7],"41":[1,1,40],"42":[1,1,1],"43":[3,1,22],"44":[3,1,37],"45":[3,1,12],"46":[2,1,10],"47":[2,3,9],"48":[2,1,22],"49":[1,1,1],"50":[2,1,38],"51":[1,1,10],"52":[3,1,7],"53":[3,1,30],"54":[5,1,19],"55":[7,1,17],"56":[1,1,1],"57":[4,1,20],"58":[3,1,26],"59":[2,3,42],"60":[6,1,10],"61":[2,1,17],"62":[8,1,12],"63":[3,1,26],"64":[1,1,1],"65":[5,1,41],"66":[6,1,17],"67":[3,1,19],"68":[5,1,21],"69":[2,1,20],"70":[2,1,19],"71":[1,1,13],"72":[1,1,12],"73":[1,1,38],"74":[1,1,17],"75":[2,2,12],"76":[2,2,19],"77":[2,2,21],"78":[1,1,1],"79":[3,1,13],"80":[1,1,17],"81":[3,1,17],"82":[4,1,11],"83":[3,1,7],"84":[2,1,1],"85":[4,2,34],"86":[4,2,21],"87":[1,1,1],"88":[1,1,13],"89":[1,1,30],"90":[2,1,50],"91":[1,1,1],"92":[2,1,28],"93":[1,1,49],"94":[2,1,64],"95":[1,1,9],"96":[2,2,28],"97":[2,2,50],"98":[5,1,23],"99":[3,1,19],"100":[5,1,48],"101":[3,1,45],"102":[1,1,1],"103":[1,1,30],"104":[5,1,41],"105":[1,6,30],"106":[2,6,41],"107":[2,1,29],"108":[5,1,17],"109":[1,1,1],"110":[5,1,1],"111":[2,6,40],"112":[4,6,25],"113":[4,6,23],"114":[4,6,71],"115":[11,6,56],"116":[2,1,1],"117":[3,2,32],"118":[2,2,10],"119":[2,3,27],"120":[2,3,9],"121":[3,1,14],"122":[2,3,26],"123":[2,3,21],"124":[1,3,11],"125":[2,1,1],"126":[8,2,1],"127":[3,9,1],"128":[1,9,87],"129":[3,2,342]},"averageFieldLength":[2.392307692307692,1.7307692307692313,22.892307692307686],"storedFields":{"0":{"title":"作者","titles":[]},"1":{"title":"一位在校大学生","titles":["作者"]},"2":{"title":"Runtime API Examples","titles":[]},"3":{"title":"Results","titles":["Runtime API Examples"]},"4":{"title":"Theme Data","titles":["Runtime API Examples","Results"]},"5":{"title":"Page Data","titles":["Runtime API Examples","Results"]},"6":{"title":"Page Frontmatter","titles":["Runtime API Examples","Results"]},"7":{"title":"More","titles":["Runtime API Examples"]},"8":{"title":"测试","titles":[]},"9":{"title":"二级标题","titles":["测试"]},"10":{"title":"三级标题","titles":["测试"]},"11":{"title":"Custom Containers","titles":["测试"]},"12":{"title":"hhhhh","titles":[]},"13":{"title":"kskdklkop","titles":["hhhhh"]},"14":{"title":"测试","titles":[]},"15":{"title":"二级标题","titles":["测试"]},"16":{"title":"三级标题","titles":["测试"]},"17":{"title":"Custom Containers","titles":["测试"]},"18":{"title":"面向对象基础","titles":[]},"19":{"title":"面向对象和面向过程的区别？","titles":["面向对象基础"]},"20":{"title":"创建一个对象用什么运算符?对象实体与对象引用有何不同?","titles":["面向对象基础"]},"21":{"title":"对象的相等和引用相等的区别","titles":["面向对象基础"]},"22":{"title":"方法重载和重写的区别？","titles":["面向对象基础"]},"23":{"title":"构造方法有哪些特点？是否可被 override?","titles":["面向对象基础"]},"24":{"title":"面向对象三大特性","titles":["面向对象基础"]},"25":{"title":"封装","titles":["面向对象基础","面向对象三大特性"]},"26":{"title":"继承","titles":["面向对象基础","面向对象三大特性"]},"27":{"title":"多态","titles":["面向对象基础","面向对象三大特性"]},"28":{"title":"接口和抽象类有什么共同点和区别？","titles":["面向对象基础"]},"29":{"title":"深拷贝和浅拷贝区别了解吗？什么是引用拷贝？","titles":["面向对象基础"]},"30":{"title":"什么是深拷贝和浅拷贝?","titles":["面向对象基础","深拷贝和浅拷贝区别了解吗？什么是引用拷贝？"]},"31":{"title":"Java基础知识","titles":[]},"32":{"title":"什么是值传递和引用传递？","titles":["Java基础知识"]},"33":{"title":"c++和java的区别","titles":["Java基础知识"]},"34":{"title":"Java关键字和保留字","titles":["Java基础知识"]},"35":{"title":"Java的特点","titles":["Java基础知识"]},"36":{"title":"Java是如何实现跨平台的？","titles":["Java基础知识"]},"37":{"title":"为什么说 Java 语言“编译与解释并存”？","titles":["Java基础知识"]},"38":{"title":"JDK/JRE/JVM三者的关系","titles":["Java基础知识"]},"39":{"title":"Java创建对象有几种方式？","titles":["Java基础知识"]},"40":{"title":"说说类实例化的顺序","titles":["Java基础知识"]},"41":{"title":"Java的4种引用类型","titles":["Java基础知识"]},"42":{"title":"Java数据类型","titles":[]},"43":{"title":"Java的基本数据类型有哪些？每个占多少位?","titles":["Java数据类型"]},"44":{"title":"了解Java的包装类型吗？为什么需要包装类？","titles":["Java数据类型"]},"45":{"title":"自动装箱与拆箱了解吗？原理是什么？","titles":["Java数据类型"]},"46":{"title":"为什么浮点数运算的时候会有精度丢失的风险？","titles":["Java数据类型"]},"47":{"title":"如何解决浮点数运算的精度丢失问题？","titles":["Java数据类型","为什么浮点数运算的时候会有精度丢失的风险？"]},"48":{"title":"包装类型的缓存机制了解么？","titles":["Java数据类型"]},"49":{"title":"Object","titles":[]},"50":{"title":"Object常用方法有哪些？","titles":["Object"]},"51":{"title":"equals和引用相等==的区别","titles":["Object"]},"52":{"title":"hashCode() 有什么用？","titles":["Object"]},"53":{"title":"为什么要有 hashCode？","titles":["Object"]},"54":{"title":"为什么重写 equals 时一定要重写 hashCode？","titles":["Object"]},"55":{"title":"两个对象的hashCode()相同，则 equals()是否也一定为 true？","titles":["Object"]},"56":{"title":"String","titles":[]},"57":{"title":"String, StringBuffer 和 StringBuilder区别","titles":["String"]},"58":{"title":"String 为什么不可变？","titles":["String"]},"59":{"title":"为什么String要设计成不可变的？","titles":["String","String 为什么不可变？"]},"60":{"title":"String.equals() 和 Object.equals() 有何区别？","titles":["String"]},"61":{"title":"什么是字符串常量池？","titles":["String"]},"62":{"title":"String s = new String(&quot;abc&quot;)会创建几个对象？","titles":["String"]},"63":{"title":"String 类的常用方法有哪些？","titles":["String"]},"64":{"title":"异常","titles":[]},"65":{"title":"Exception 和 Error 有什么区别？","titles":["异常"]},"66":{"title":"运行时异常(RuntimeException)和非运行时异常（checkedExecption）的区别？","titles":["异常"]},"67":{"title":"Throwable 类常用方法有哪些？","titles":["异常"]},"68":{"title":"try-catch-finally 如何使用？","titles":["异常"]},"69":{"title":"Java中的finally一定会被执行吗？","titles":["异常"]},"70":{"title":"throw和throws的区别？","titles":["异常"]},"71":{"title":"泛型","titles":[]},"72":{"title":"代理","titles":[]},"73":{"title":"静态代理","titles":["代理"]},"74":{"title":"动态代理","titles":["代理"]},"75":{"title":"1.JDK动态代理","titles":["代理","动态代理"]},"76":{"title":"2.CGLIB动态代理","titles":["代理","动态代理"]},"77":{"title":"3.静态代理和动态代理的对比","titles":["代理","动态代理"]},"78":{"title":"序列化与反序列化","titles":[]},"79":{"title":"什么是序列化?什么是反序列化?","titles":["序列化与反序列化"]},"80":{"title":"常见应用场景","titles":["序列化与反序列化"]},"81":{"title":"如果有些字段不想进行序列化怎么办？(transient关键字)","titles":["序列化与反序列化"]},"82":{"title":"实现序列化和反序列化为什么要实现 Serializable 接口?","titles":["序列化与反序列化"]},"83":{"title":"static 属性为什么不会被序列化?","titles":["序列化与反序列化"]},"84":{"title":"I/O流","titles":[]},"85":{"title":"Java IO 流了解吗？","titles":["I/O流"]},"86":{"title":"I/O 流为什么要分为字节流和字符流呢?","titles":["I/O流"]},"87":{"title":"反射","titles":[]},"88":{"title":"什么是反射","titles":["反射"]},"89":{"title":"反射应用场景","titles":["反射"]},"90":{"title":"反射的优缺点？","titles":["反射"]},"91":{"title":"Mysql基础","titles":[]},"92":{"title":"什么是关系型数据库？","titles":["Mysql基础"]},"93":{"title":"数据库的三大范式","titles":["Mysql基础"]},"94":{"title":"Mysql的架构/组成","titles":["Mysql基础"]},"95":{"title":"sql语句在Mysql中的执行过程","titles":["Mysql基础"]},"96":{"title":"1.查询语句执行流程","titles":["Mysql基础","sql语句在Mysql中的执行过程"]},"97":{"title":"2.更新语句执行流程","titles":["Mysql基础","sql语句在Mysql中的执行过程"]},"98":{"title":"inner join,left join和right join的区别","titles":["Mysql基础"]},"99":{"title":"MySQL 是如何保证数据不丢失的？","titles":["Mysql基础"]},"100":{"title":"什么会导致MySQL 自增主键 ID 不连续？","titles":["Mysql基础"]},"101":{"title":"什么是sql注入？怎么解决？","titles":["Mysql基础"]},"102":{"title":"存储引擎","titles":[]},"103":{"title":"常见存储引擎","titles":["存储引擎"]},"104":{"title":"MyISAM 和 InnoDB 有什么区别？","titles":["存储引擎"]},"105":{"title":"行级锁和表级锁","titles":["存储引擎","MyISAM 和 InnoDB 有什么区别？"]},"106":{"title":"行锁有哪几种？","titles":["存储引擎","MyISAM 和 InnoDB 有什么区别？"]},"107":{"title":"innoDB 数据页结构","titles":["存储引擎"]},"108":{"title":"InnoDB 为什么要用自增 ID 作为主键？","titles":["存储引擎"]},"109":{"title":"日志","titles":[]},"110":{"title":"bin log/redo log/undo log日志","titles":["日志"]},"111":{"title":"它们是什么？","titles":["日志","bin log/redo log/undo log日志"]},"112":{"title":"undo log 与redo log的区别","titles":["日志","bin log/redo log/undo log日志"]},"113":{"title":"bin log和redo log有什么区别？","titles":["日志","bin log/redo log/undo log日志"]},"114":{"title":"redo log 的执行流程?","titles":["日志","bin log/redo log/undo log日志"]},"115":{"title":"为什么 redo log 具有 crash-safe 的能力，是 binlog 无法替代的？","titles":["日志","bin log/redo log/undo log日志"]},"116":{"title":"RAG 概念","titles":[]},"117":{"title":"什么是 RAG？","titles":["RAG 概念"]},"118":{"title":"RAG 工作流程","titles":["RAG 概念"]},"119":{"title":"1、文档收集和切割","titles":["RAG 概念","RAG 工作流程"]},"120":{"title":"2、向量转换和存储","titles":["RAG 概念","RAG 工作流程"]},"121":{"title":"Markdown Extension Examples","titles":[]},"122":{"title":"Syntax Highlighting","titles":["Markdown Extension Examples"]},"123":{"title":"Custom Containers","titles":["Markdown Extension Examples"]},"124":{"title":"More","titles":["Markdown Extension Examples"]},"125":{"title":"Java 后端开发工程师零基础入门学习路线","titles":[]},"126":{"title":"一、阶段一：Java 基础语法与核心特性（0-4 周）","titles":["Java 后端开发工程师零基础入门学习路线"]},"127":{"title":"（一）核心知识点","titles":["Java 后端开发工程师零基础入门学习路线","一、阶段一：Java 基础语法与核心特性（0-4 周）"]},"128":{"title":"开发环境搭建","titles":["Java 后端开发工程师零基础入门学习路线","一、阶段一：Java 基础语法与核心特性（0-4 周）","（一）核心知识点"]},"129":{"title":"（二）学习资源推荐","titles":["Java 后端开发工程师零基础入门学习路线"]}},"dirtCount":0,"index":[["尝试",{"2":{"129":1}}],["拓展学习",{"2":{"129":1}}],["示例",{"2":{"129":1}}],["开源项目结构",{"2":{"129":1}}],["开发基础与框架入门",{"2":{"129":1}}],["开发手册",{"2":{"129":1}}],["开发环境搭建",{"0":{"128":1}}],["开发工具包",{"2":{"38":1}}],["开发效率比较低",{"2":{"37":1}}],["复盘与拓展",{"2":{"129":1}}],["复杂查询",{"2":{"129":1}}],["部署尝试",{"2":{"129":1}}],["部分",{"2":{"129":1}}],["严格遵循",{"2":{"129":1}}],["严格的参数校验",{"2":{"101":1}}],["绘制简单流程图",{"2":{"129":1}}],["梳理功能模块",{"2":{"129":1}}],["需求分析",{"2":{"129":1}}],["需要事务支持",{"2":{"103":1}}],["需要将表拆分为学生表和院校表",{"2":{"93":1}}],["需要由具体的子类或实现类来进行实例化",{"2":{"28":1}}],["现代开发主流",{"2":{"129":1}}],["现代开发中逐渐弱化",{"2":{"129":1}}],["替代",{"2":{"129":1}}],["权限控制",{"2":{"129":1}}],["订单流程",{"2":{"129":1}}],["订单趋势",{"2":{"129":1}}],["商品管理",{"2":{"129":1}}],["电商后台管理系统",{"2":{"129":1}}],["评论互动",{"2":{"129":1}}],["评论表",{"2":{"129":1}}],["注册",{"2":{"129":1}}],["注解配置",{"2":{"129":1}}],["注解",{"2":{"89":1}}],["登录",{"2":{"129":1}}],["登录态",{"2":{"129":1}}],["串联所有知识",{"2":{"129":1}}],["五",{"2":{"129":1}}],["高频数据缓存",{"2":{"129":1}}],["高性能",{"2":{"129":1}}],["添加",{"2":{"129":1}}],["给",{"2":{"129":1}}],["给开发者更多优化的空间",{"2":{"33":1}}],["狂神说",{"2":{"129":1}}],["索引",{"2":{"129":1}}],["索引优化",{"2":{"129":1}}],["选读",{"2":{"129":1}}],["选择",{"2":{"128":1,"129":1}}],["选择合适的锁策略取决于具体的工作负载和性能需求",{"2":{"105":1}}],["选择最有效的查询路径",{"2":{"94":1}}],["非必须但可拓展视野",{"2":{"129":1}}],["非主键列",{"2":{"93":2}}],["消息队列入门",{"2":{"129":1}}],["消息队列初步",{"2":{"129":1}}],["消除传递依赖",{"2":{"93":1}}],["消除部分依赖",{"2":{"93":1}}],["缓存",{"2":{"129":2}}],["缓存使用场景",{"2":{"129":1}}],["缓存的范围区间的大小只是在性能和资源之间的权衡",{"2":{"48":1}}],["悲观锁实践",{"2":{"129":1}}],["乐观锁",{"2":{"129":1}}],["特性",{"2":{"129":1}}],["特别是在高并发的环境中",{"2":{"106":1}}],["子查询",{"2":{"129":1}}],["联表查询",{"2":{"129":1}}],["四",{"2":{"129":1}}],["合并",{"2":{"129":1}}],["模仿",{"2":{"129":1}}],["模式",{"2":{"129":1}}],["模拟",{"2":{"129":1}}],["模型将文本块转换为高维向量表示",{"2":{"120":1}}],["仓库",{"2":{"129":1}}],["仓库初始化",{"2":{"129":1}}],["廖雪峰",{"2":{"129":1}}],["教程",{"2":{"129":3}}],["指南",{"2":{"129":1}}],["堆栈信息定位问题",{"2":{"129":1}}],["断点调试",{"2":{"129":1}}],["版本管理",{"2":{"129":1}}],["版本控制",{"2":{"129":1}}],["版本的",{"2":{"38":2}}],["驱动等",{"2":{"129":1}}],["工程",{"2":{"129":1}}],["工具链与工程化",{"2":{"129":1}}],["工作流程",{"0":{"118":1},"1":{"119":1,"120":1}}],["练习外键关联",{"2":{"129":1}}],["博客系统",{"2":{"129":1}}],["设计",{"2":{"129":1}}],["含简单前端页面",{"2":{"129":1}}],["功能",{"2":{"129":3}}],["项目实战与总结",{"2":{"129":1}}],["项目改造为",{"2":{"129":1}}],["项目构建与依赖管理",{"2":{"129":1}}],["项目",{"2":{"129":1}}],["搭建基础",{"2":{"129":1}}],["快速上手",{"2":{"129":1}}],["短小精悍",{"2":{"129":1}}],["必知必会",{"2":{"129":1}}],["必须进行处理",{"2":{"66":1}}],["必须处理",{"2":{"65":1}}],["必须要经过jvm的翻译才能执行",{"2":{"36":1}}],["黑马程序员",{"2":{"129":1}}],["zh",{"2":{"129":1}}],["框架",{"2":{"129":1}}],["框架整合实战",{"2":{"129":1}}],["框架教程",{"2":{"129":1}}],["框架文档",{"2":{"129":1}}],["框架核心",{"2":{"129":1}}],["连接池",{"2":{"129":1}}],["连接器",{"2":{"94":1}}],["标签",{"2":{"129":1}}],["标准化文本格式",{"2":{"119":1}}],["标准的",{"2":{"34":1}}],["前后端参数交互",{"2":{"129":1}}],["前者是字节输出流",{"2":{"85":1}}],["前者是字节输入流",{"2":{"85":1}}],["映射文件",{"2":{"129":1}}],["映射",{"2":{"129":1}}],["管理依赖",{"2":{"129":1}}],["管理",{"2":{"129":1}}],["依赖引入",{"2":{"129":1}}],["依赖注入",{"2":{"129":1}}],["依赖于主键的情况",{"2":{"93":1}}],["依赖于非主键列",{"2":{"93":1}}],["初体验",{"2":{"129":1}}],["了解基础运维",{"2":{"129":1}}],["了解",{"2":{"129":2}}],["了解动态页面渲染",{"2":{"129":1}}],["了解java的包装类型吗",{"0":{"44":1}}],["入门",{"2":{"129":1}}],["入门到实战",{"2":{"129":1}}],["状态码",{"2":{"129":1}}],["状态为",{"2":{"99":1}}],["响应流程",{"2":{"129":1}}],["请求参数获取",{"2":{"129":1}}],["请求头",{"2":{"129":1}}],["请求",{"2":{"129":1}}],["协议",{"2":{"129":1}}],["阶段五",{"2":{"129":1}}],["阶段四",{"2":{"129":1}}],["阶段三",{"2":{"129":1}}],["阶段二",{"2":{"129":1}}],["阶段一",{"0":{"126":1},"1":{"127":1,"128":1}}],["命令",{"2":{"129":1}}],["命令行计算器",{"2":{"129":1}}],["命名好习惯",{"2":{"129":1}}],["养成注释",{"2":{"129":1}}],["泰山版",{"2":{"129":1}}],["阿里巴巴",{"2":{"129":1}}],["增删改查",{"2":{"129":2}}],["增加",{"2":{"95":1}}],["控制台版",{"2":{"129":1}}],["学习重点",{"2":{"129":1}}],["学习",{"2":{"129":1}}],["学习资源推荐",{"0":{"129":1},"2":{"129":3}}],["学生信息管理系统",{"2":{"129":1}}],["实战课程",{"2":{"129":1}}],["实践建议",{"2":{"129":4}}],["实现数据的存储和提取",{"2":{"94":1}}],["实现序列化和反序列化为什么要实现",{"0":{"82":1}}],["实现类",{"2":{"77":1}}],["实现cloneable接口",{"2":{"50":1}}],["实现了对象中各个属性的复制",{"2":{"50":1}}],["实现一次编写",{"2":{"38":1}}],["实现",{"2":{"38":3,"128":1,"129":1}}],["实现跨平台的",{"2":{"36":1}}],["实现多态的三要素",{"2":{"27":1}}],["三",{"2":{"129":6}}],["三级标题",{"0":{"10":1,"16":1}}],["官方文档",{"2":{"129":2}}],["官方手册",{"2":{"129":1}}],["官方指南",{"2":{"129":1}}],["官方",{"2":{"129":1}}],["慕课网",{"2":{"129":3}}],["零基础教程",{"2":{"129":1}}],["尚硅谷",{"2":{"129":1}}],["站",{"2":{"129":3}}],["趣味入门",{"2":{"129":1}}],["卷",{"2":{"129":1}}],["书籍",{"2":{"129":1}}],["读写文件",{"2":{"128":1}}],["读取的文件不存在或文件为空或sql异常",{"2":{"66":1}}],["进阶版",{"2":{"129":1}}],["进阶基础",{"2":{"128":1}}],["进行权限校验",{"2":{"96":1}}],["进行同步",{"2":{"57":1}}],["进行日志记录",{"2":{"34":1}}],["进行处理",{"2":{"34":1}}],["集合框架基础",{"2":{"128":1}}],["区别与使用",{"2":{"128":1}}],["关键字",{"2":{"128":1}}],["关系模型表明了数据库中所存储的数据之间的联系",{"2":{"92":1}}],["关系型数据库中",{"2":{"92":1}}],["关系型数据库",{"2":{"92":1}}],["逻辑",{"2":{"128":1}}],["算术",{"2":{"128":1}}],["理解编译",{"2":{"128":1}}],["理解不同类型行锁的特点和适用场景",{"2":{"106":1}}],["推荐过渡学习",{"2":{"129":1}}],["推荐",{"2":{"128":1}}],["社区版",{"2":{"128":1}}],["安装",{"2":{"129":1}}],["安装与环境变量配置",{"2":{"128":1}}],["安全限制",{"2":{"90":1}}],["核心技术",{"2":{"129":1}}],["核心知识点",{"0":{"127":1},"1":{"128":1},"2":{"129":3}}],["核心类库",{"2":{"38":2}}],["周",{"0":{"126":1},"1":{"127":1,"128":1},"2":{"129":4}}],["```",{"2":{"122":1}}],["向量存储",{"2":{"120":1}}],["向量转换",{"2":{"120":1}}],["向量转换和存储",{"0":{"120":1},"2":{"118":1}}],["切割",{"2":{"119":1}}],["章节",{"2":{"119":1}}],["俗称",{"2":{"119":1}}],["清洗",{"2":{"119":1}}],["收集原始文档",{"2":{"119":1}}],["网页",{"2":{"119":1}}],["网络地址url",{"2":{"59":1}}],["网络传输等场景",{"2":{"34":1}}],["文章发布",{"2":{"129":1}}],["文章表",{"2":{"129":1}}],["文档",{"2":{"129":1}}],["文档切割",{"2":{"119":1}}],["文档预处理",{"2":{"119":1}}],["文档收集",{"2":{"119":1}}],["文档收集和切割",{"0":{"119":1},"2":{"118":1}}],["文档过滤和检索",{"2":{"118":1}}],["文件路径path",{"2":{"59":1}}],["文件",{"2":{"36":1,"37":1,"77":1,"85":1}}],["技术栈",{"2":{"129":2}}],["技术实现主要包含以下",{"2":{"118":1}}],["技术改造后",{"2":{"117":1}}],["准确回答关于特定内容的问题",{"2":{"117":1}}],["准备状态",{"2":{"97":1}}],["回答问题前先查一查特定的知识库来获取知识",{"2":{"117":1}}],["回滚日志",{"2":{"111":1}}],["回滚和崩溃修复能力",{"2":{"104":1}}],["让我们分步来学习",{"2":{"118":1}}],["让",{"2":{"117":1}}],["小抄本",{"2":{"117":1}}],["小于",{"2":{"106":1}}],["配置",{"2":{"128":1,"129":3}}],["配了一个",{"2":{"117":1}}],["配合使用",{"2":{"34":1}}],["检索增强生成",{"2":{"117":1}}],["检查语句是否符合语法结构",{"2":{"94":1}}],["概念",{"0":{"116":1},"1":{"117":1,"118":1,"119":1,"120":1}}],["说明此次操作失败",{"2":{"115":2}}],["说说类实例化的顺序",{"0":{"40":1}}],["拥有全量的日志",{"2":{"115":1}}],["想要恢复未刷盘但已经写入",{"2":{"115":1}}],["保存的是全量的日志",{"2":{"115":1}}],["保证数据的一致性",{"2":{"114":1}}],["保证事务的持久性",{"2":{"113":1}}],["保证了事务的原子性和一致性",{"2":{"111":1}}],["保证持久化磁盘就能确保mysql异常重启后回复数据",{"2":{"99":1}}],["保证原子性",{"2":{"93":1}}],["哪些数据还没有",{"2":{"115":2}}],["判断哪些数据已经刷盘",{"2":{"115":2}}],["已经刷入磁盘的数据都会从",{"2":{"115":1}}],["已提交",{"2":{"114":2}}],["已编译的java程序可以在任何带有jvm的平台上运行",{"2":{"35":1}}],["找到未完成的事务",{"2":{"114":1}}],["事务",{"2":{"129":1}}],["事务与锁",{"2":{"129":1}}],["事务也不可能提交",{"2":{"115":2}}],["事务也可以正常提交",{"2":{"114":1}}],["事务回滚",{"2":{"100":1}}],["插入",{"2":{"114":1}}],["插入数据失败",{"2":{"100":1}}],["且自增的log",{"2":{"114":1}}],["且不侵入原代码",{"2":{"73":1}}],["防止系统崩溃导致的数据丢失",{"2":{"113":1}}],["防止sql注入",{"2":{"101":1}}],["采用wal策略提升写入性能",{"2":{"112":1}}],["避免锁竞争",{"2":{"112":1}}],["与",{"2":{"129":1}}],["与表达式",{"2":{"128":1}}],["与redo",{"0":{"112":1}}],["与其相对应的",{"2":{"69":1}}],["若执行update",{"2":{"111":1}}],["仍能把事务中变更的数据持久化到磁盘上",{"2":{"111":1}}],["记录逻辑操作",{"2":{"113":1}}],["记录内容",{"2":{"113":1}}],["记录了这个页的字段值变化",{"2":{"115":1}}],["记录了对mysql数据库执行更改的所有操作",{"2":{"113":1}}],["记录了所有更改数据或可能更改数据的sql语句",{"2":{"111":1}}],["记录物理数据页面的修改信息",{"2":{"112":1,"113":1}}],["记录数据的逻辑变化",{"2":{"112":1}}],["记录数据页的物理修改操作",{"2":{"112":1,"113":1}}],["记录事务对数据所做的修改前的状态",{"2":{"112":1}}],["记录的是数据修改之后的值",{"2":{"111":1}}],["记录锁是直接锁定某行记录的锁",{"2":{"106":1}}],["记录锁",{"2":{"106":1}}],["得到了不够紧凑的索引结构",{"2":{"108":1}}],["频繁的移动",{"2":{"108":1}}],["每月活跃用户",{"2":{"129":1}}],["每当有数据被修改",{"2":{"114":1}}],["每次更新操作完成后",{"2":{"115":1}}],["每次插入新的记录就会顺序添加到当前索引节点的后续位置",{"2":{"108":1}}],["每次都是追加操作",{"2":{"108":1}}],["每个目标对象对应一个代理类",{"2":{"73":1}}],["每个占多少位",{"0":{"43":1}}],["每个",{"2":{"34":1}}],["符合递增插入",{"2":{"108":1}}],["页中某些记录的相对位置",{"2":{"107":1}}],["页中尚未使用的部分",{"2":{"107":1}}],["真正存储我们插入的数据",{"2":{"107":1}}],["占固定大小",{"2":{"107":1}}],["占固定的26字节",{"2":{"107":1}}],["占固定的56字节",{"2":{"107":1}}],["占固定的38字节",{"2":{"107":1}}],["占用的数据空间相对较大",{"2":{"103":1}}],["此外",{"2":{"106":1}}],["此时sql语句结构已固定",{"2":{"101":1}}],["此时redo",{"2":{"97":1}}],["间隙锁是锁定一个范围内的索引记录",{"2":{"106":1}}],["间隙锁",{"2":{"106":1}}],["否则可能退化为其他类型的锁",{"2":{"106":1}}],["加锁速度快",{"2":{"105":1}}],["种锁的开销较小",{"2":{"105":1}}],["种包装类默认创建了数值",{"2":{"48":1}}],["具有",{"0":{"115":1},"2":{"115":1}}],["具有事务",{"2":{"104":1}}],["具体来说",{"2":{"114":1}}],["具体地址",{"2":{"93":1}}],["备份",{"2":{"104":1}}],["备份及恢复",{"2":{"104":1}}],["基础版",{"2":{"129":1}}],["基础章节",{"2":{"129":1}}],["基础",{"2":{"129":4}}],["基础篇",{"2":{"129":1}}],["基础语法",{"2":{"128":1}}],["基础语法与核心特性",{"0":{"126":1},"1":{"127":1,"128":1}}],["基于递归分割策略",{"2":{"119":1}}],["基于语义边界",{"2":{"119":1}}],["基于固定大小",{"2":{"119":1}}],["基于聚簇索引建立的",{"2":{"103":1}}],["基本概念",{"2":{"112":1,"113":1,"129":1}}],["基本数据类型没有equal方法",{"2":{"51":1}}],["支持加减乘除",{"2":{"129":1}}],["支持高效的相似性搜索",{"2":{"120":1}}],["支持mvcc以提供一致性读视图",{"2":{"112":1}}],["支持行级锁和表级锁",{"2":{"104":1}}],["支持事务和崩溃修复能力",{"2":{"103":1}}],["支持事务",{"2":{"103":1}}],["支持hash映射和缓存",{"2":{"59":1}}],["拼接替换符",{"2":{"101":1}}],["拼接起来",{"2":{"101":1}}],["$",{"2":{"101":1}}],["传递到服务器解析并执行的一种攻击手法",{"2":{"101":1}}],["传递的是该对象地址的一个副本",{"2":{"32":1}}],["传递的是该变量的一个副本",{"2":{"32":1}}],["怎么解决",{"0":{"101":1}}],["怎么解释呢",{"2":{"59":1}}],["尽量减少事务回滚和数据删除操作",{"2":{"100":1}}],["作为主键",{"0":{"108":1},"2":{"100":1}}],["作者",{"0":{"0":1},"1":{"1":1}}],["手动设置自增",{"2":{"100":1}}],["虽然",{"2":{"115":1}}],["虽然每个节点内部是连续的",{"2":{"100":1}}],["虽然c++代码也可以跨平台",{"2":{"33":1}}],["什么会导致mysql",{"0":{"100":1}}],["什么是",{"0":{"117":1}}],["什么是sql注入",{"0":{"101":1}}],["什么是关系型数据库",{"0":{"92":1}}],["什么是反射",{"0":{"88":1}}],["什么是反序列化",{"0":{"79":1}}],["什么是序列化",{"0":{"79":1}}],["什么是字符串常量池",{"0":{"61":1}}],["什么是自动拆装箱",{"2":{"45":1}}],["什么是值传递和引用传递",{"0":{"32":1}}],["什么是深拷贝和浅拷贝",{"0":{"30":1}}],["什么是引用拷贝",{"0":{"29":1},"1":{"30":1}}],["决定是回滚还是执行",{"2":{"99":1}}],["xml",{"2":{"129":4}}],["x锁",{"2":{"106":1}}],["x8fd9",{"2":{"105":1}}],["x6709",{"2":{"103":1}}],["x548c",{"2":{"99":1}}],["x20",{"2":{"99":2,"103":1}}],["x3c",{"2":{"2":8}}],["全连接",{"2":{"98":1}}],["左表返回匹配行",{"2":{"98":1}}],["左连接",{"2":{"98":1}}],["右连接",{"2":{"98":1}}],["右表返回匹配行",{"2":{"98":1}}],["交集",{"2":{"98":1}}],["查看变量",{"2":{"129":1}}],["查出两表完全匹配的部分",{"2":{"98":1}}],["查询增强和关联",{"2":{"118":1}}],["查询语句中的条件必须使用精确匹配",{"2":{"106":1}}],["查询语句执行流程",{"0":{"96":1}}],["查询缓存",{"2":{"94":2}}],["机器挂了",{"2":{"97":1}}],["写入失败",{"2":{"115":1}}],["写入到redo",{"2":{"114":1}}],["写入更新数据",{"2":{"97":1}}],["写数据成本较高",{"2":{"108":1}}],["写完redo",{"2":{"97":1}}],["引导其生成更准确",{"2":{"117":1}}],["引入了行级锁和外键约束",{"2":{"103":1}}],["引擎将数据保存在内存中",{"2":{"97":1}}],["引用类型指向的对象的状态也不能改变",{"2":{"58":1}}],["引用类型的变量不能指向其他的对象",{"2":{"58":1}}],["引用传递一般是对于对象型变量而言的",{"2":{"32":1}}],["引用相等一般比较的是他们指向的内存地址是否相等",{"2":{"21":1}}],["拿到查询结果",{"2":{"97":1}}],["举个例子",{"2":{"97":1}}],["更准确的建议",{"2":{"117":1}}],["更相关的回答",{"2":{"117":1}}],["更新或删除",{"2":{"114":1}}],["更新完成",{"2":{"97":1}}],["更新为张三",{"2":{"97":1}}],["更新语句是这样的",{"2":{"97":1}}],["更新语句执行流程",{"0":{"97":1}}],["更加灵活",{"2":{"76":1}}],["提升查询效率",{"2":{"129":1}}],["提升写入性能",{"2":{"113":1}}],["提交实践",{"2":{"129":1}}],["提交redo",{"2":{"97":1}}],["提取",{"2":{"96":1}}],["提供更新",{"2":{"117":1}}],["提供事务支持",{"2":{"104":1}}],["提供的一种在运行时动态获取和操作类",{"2":{"88":1}}],["提供额外的功能操作",{"2":{"72":1}}],["确保回答是基于真实资料而不是凭空想象",{"2":{"117":1}}],["确保数据库表字段的原子性",{"2":{"93":1}}],["确认当前用户有权执行该操作",{"2":{"94":1}}],["根据优化后的执行计划调用存储引擎的api来实际执行sql语句",{"2":{"94":1}}],["根据其实际类型调用相应的方法",{"2":{"27":1}}],["词法分析和语法分析",{"2":{"94":1}}],["负责与客户端建立连接",{"2":{"94":1}}],["负责监控并自动回收不再被引用的对象的内存空间",{"2":{"33":1}}],["日志分析",{"2":{"129":1}}],["日志序列号",{"2":{"114":1}}],["日志",{"0":{"109":1},"1":{"110":1,"111":1,"112":1,"113":1,"114":1,"115":1}}],["日志模块",{"2":{"94":1}}],["日期等等",{"2":{"92":1}}],["函数等",{"2":{"94":1}}],["视图",{"2":{"94":1}}],["触发器",{"2":{"94":1}}],["执行下一步",{"2":{"96":1}}],["执行器收到通知后记录binlog",{"2":{"97":1}}],["执行器",{"2":{"94":1}}],["执行器等",{"2":{"94":1}}],["执行查询语句的时候",{"2":{"94":1}}],["执行速度比较慢",{"2":{"37":1}}],["执行速度",{"2":{"33":1}}],["优化项目",{"2":{"129":1}}],["优化数据库连接",{"2":{"129":1}}],["优化器根据自己的优化算法进行选择执行效率最好的一个方案",{"2":{"96":1}}],["优化器对查询进行优化",{"2":{"94":1}}],["优化器",{"2":{"94":2}}],["优点",{"2":{"73":1,"76":1,"103":1}}],["层分离",{"2":{"129":1}}],["层基本组件",{"2":{"94":1}}],["层",{"2":{"94":1}}],["层和存储引擎层",{"2":{"94":1}}],["层面",{"2":{"77":1}}],["组成",{"0":{"94":1}}],["二",{"0":{"129":1},"2":{"129":5}}],["二进制日志",{"2":{"111":1}}],["二是非主键列必须完全依赖于主键",{"2":{"93":1}}],["二级标题",{"0":{"9":1,"15":1}}],["首先通过词法分析识别出各个字符串的意义",{"2":{"94":1}}],["首先要满足第二范式",{"2":{"93":1}}],["首先要满足第一范式",{"2":{"93":1}}],["首先明确字节流适用于任何场景",{"2":{"86":1}}],["第二点",{"2":{"115":1}}],["第二范式2nf",{"2":{"93":1}}],["第一个",{"2":{"128":1}}],["第一点",{"2":{"115":1}}],["第一范式1nf",{"2":{"93":1}}],["第三范式3nf",{"2":{"93":1}}],["城市",{"2":{"93":1}}],["省份",{"2":{"93":1}}],["拆分为",{"2":{"93":1}}],["拆箱",{"2":{"45":1}}],["按1nf要求",{"2":{"93":1}}],["按照3nf的要求",{"2":{"93":1}}],["按照属性是否相等来判断",{"2":{"50":1}}],["按照重写逻辑输出对象值",{"2":{"50":1}}],["市和具体地址",{"2":{"93":1}}],["地址",{"2":{"93":3}}],["列包含了省",{"2":{"93":1}}],["列上的值是有数据类型的",{"2":{"92":1}}],["列代表该行中的每个值",{"2":{"92":1}}],["行锁的选择和配置取决于具体的应用场景和性能要求",{"2":{"106":1}}],["行锁主要有记录锁和间隙锁两种类型",{"2":{"106":1}}],["行锁有哪几种",{"0":{"106":1}}],["行锁大幅度提高了多用户并发操作的性能",{"2":{"104":1}}],["行级锁提供了更好的并发性能",{"2":{"105":1}}],["行级锁是细粒度的锁",{"2":{"105":1}}],["行级锁",{"2":{"105":1}}],["行级锁和表级锁是数据库中用于控制并发操作的两种不同类型的锁",{"2":{"105":1}}],["行级锁和表级锁",{"0":{"105":1}}],["行代表每一行数据",{"2":{"92":1}}],["行和列",{"2":{"92":1}}],["行异常处理",{"2":{"34":1}}],["表结构",{"2":{"129":1}}],["表创建",{"2":{"129":1}}],["表达式",{"2":{"129":1}}],["表达式防止sql注入与preparedstatement类似",{"2":{"101":1}}],["表级锁是粗粒度的锁",{"2":{"105":1}}],["表级锁",{"2":{"105":1}}],["表名",{"2":{"101":1}}],["表扫描顺序等",{"2":{"94":1}}],["表中的每一行就存放着一条数据",{"2":{"92":1}}],["表示数据页专有信息",{"2":{"107":1}}],["表示页的一些通用信息",{"2":{"107":1}}],["表示的只是异常的申明",{"2":{"70":1}}],["表示该变量或方法是静态变量或静态方法",{"2":{"34":1}}],["表示方法或变量对同一包内的类和所有子类可见",{"2":{"34":1}}],["表示方法或变量只对当前类可见",{"2":{"34":1}}],["表示单精度浮点数",{"2":{"34":1}}],["表示无论是否处理异常",{"2":{"34":1}}],["表示布尔值",{"2":{"34":1}}],["性能开销",{"2":{"90":1}}],["定义",{"2":{"90":1}}],["定义一个接口及其实现类",{"2":{"73":1}}],["应用场景",{"2":{"112":1,"113":1}}],["应用程序可以利用全限定名创建可扩展对象的实例",{"2":{"90":1}}],["应对高并发事务",{"2":{"104":1}}],["应该将",{"2":{"93":1}}],["应该修正程序避免这类异常发生",{"2":{"66":1}}],["究竟是怎么起作用的呢",{"2":{"89":1}}],["呢",{"2":{"89":1}}],["像",{"2":{"89":1}}],["正是因为反射",{"2":{"89":1}}],["能提高读取和输入的效率",{"2":{"86":1}}],["能够跨平台运行的核心在于",{"2":{"38":1}}],["信息的最小存储单元都是字节",{"2":{"86":1}}],["问题本质想问",{"2":{"86":1}}],["后端接口",{"2":{"129":1}}],["后端开发工程师零基础入门学习路线",{"0":{"125":1},"1":{"126":1,"127":1,"128":1,"129":1}}],["后",{"2":{"115":1}}],["后的条件",{"2":{"101":1}}],["后续进行机器备份的时候",{"2":{"97":1}}],["后者是字符输出流",{"2":{"85":1}}],["后者是字符输入流",{"2":{"85":1}}],["后解释两个步骤",{"2":{"37":1}}],["流程控制",{"2":{"128":1}}],["流操作要分为字节流操作和字符流操作呢",{"2":{"86":1}}],["流为什么要分为字节流和字符流呢",{"0":{"86":1}}],["流的",{"2":{"85":1}}],["流在",{"2":{"85":1}}],["流",{"2":{"85":1,"128":1}}],["流了解吗",{"0":{"85":1}}],["远程主机",{"2":{"85":1}}],["反射代码破坏了抽象性",{"2":{"90":1}}],["反射操作的效率要比那些非反射操作低得多",{"2":{"90":1}}],["反射涉及了动态类型的解析",{"2":{"90":1}}],["反射的缺点",{"2":{"90":1}}],["反射的优点",{"2":{"90":1}}],["反射的优缺点",{"0":{"90":1}}],["反射的性能也要稍差点",{"2":{"90":1}}],["反射让我们在运行时有了分析操作类的能力的同时",{"2":{"90":1}}],["反射可以让我们的代码更加灵活",{"2":{"90":1}}],["反射应用场景",{"0":{"89":1}}],["反射",{"0":{"87":1},"1":{"88":1,"89":1,"90":1},"2":{"88":1}}],["反之输出到外部存储",{"2":{"85":1}}],["反序列化",{"2":{"79":1}}],["输入和输出",{"2":{"85":1}}],["随着类的加载而加载",{"2":{"83":1}}],["属性",{"2":{"89":1}}],["属性优先于对象存在",{"2":{"83":1}}],["属性为什么不会被序列化",{"0":{"83":1}}],["属于程序无法处理的错误",{"2":{"65":1}}],["数据结构",{"2":{"129":1}}],["数据页结构",{"0":{"107":1}}],["数据库实战",{"2":{"129":1}}],["数据库优化",{"2":{"129":1}}],["数据库进阶",{"2":{"129":1}}],["数据库进阶与中间件",{"2":{"129":1}}],["数据库设计",{"2":{"129":1}}],["数据库书籍",{"2":{"129":1}}],["数据库",{"2":{"129":1}}],["数据库基础",{"2":{"129":1}}],["数据库等",{"2":{"119":1}}],["数据库重启后",{"2":{"115":1}}],["数据库名称",{"2":{"101":1}}],["数据库备份和恢复",{"2":{"100":1}}],["数据库的三大范式",{"0":{"93":1}}],["数据传输过程类似于水流",{"2":{"85":1}}],["数据输入到计算机内存的过程即输入",{"2":{"85":1}}],["数据类型",{"2":{"34":1,"128":1}}],["数组",{"2":{"82":1}}],["型的是",{"2":{"81":1}}],["之前需要用到序列化",{"2":{"80":1}}],["之前需要先被序列化",{"2":{"80":1}}],["接下来就是优化器进行确定执行方案",{"2":{"96":1}}],["接收到序列化的对象之后需要再进行反序列化",{"2":{"80":1}}],["接口文档生成",{"2":{"129":1}}],["接口",{"0":{"82":1},"2":{"129":1}}],["接口一旦新增加方法",{"2":{"77":1}}],["接口或方法上使用",{"2":{"34":1}}],["接口中可以定义默认方法和静态方法",{"2":{"28":1}}],["接口中的方法默认为public",{"2":{"28":1}}],["接口中的方法默认都是公共的抽象方法",{"2":{"28":1}}],["接口没有构造函数",{"2":{"28":1}}],["接口只能定义公共静态最终字段",{"2":{"28":1}}],["接口使用interface关键字进行声明",{"2":{"28":1}}],["接口和抽象类有什么共同点和区别",{"0":{"28":1}}],["下面将从多个维度详细对比bin",{"2":{"113":1}}],["下面将从多个维度详细对比这两种日志",{"2":{"112":1}}],["下面是序列化和反序列化常见应用场景",{"2":{"80":1}}],["下次需要创建同样的对象时",{"2":{"59":1}}],["序列化",{"2":{"79":1}}],["序列化与反序列化",{"0":{"78":1},"1":{"79":1,"80":1,"81":1,"82":1,"83":1}}],["灵活性",{"2":{"77":1}}],["目标项目",{"2":{"129":1}}],["目标对象和代理对象都要进行修改",{"2":{"77":1}}],["目标对象与代理类都要同时修改",{"2":{"73":1}}],["目标类不需要实现特定的接口",{"2":{"76":1}}],["目标类必须有实现的接口",{"2":{"75":1}}],["角度来说",{"2":{"74":1}}],["从各种来源",{"2":{"119":1}}],["从技术角度看",{"2":{"117":1}}],["从而保证数据的一致性",{"2":{"114":1}}],["从而达到防止sql注入效果",{"2":{"101":1}}],["从内存中读取出来之后需要进行反序列化",{"2":{"80":1}}],["从",{"2":{"74":1}}],["动态创建目标类的子类对象",{"2":{"76":1}}],["动态代理等场景",{"2":{"88":1}}],["动态代理是在运行时动态生成类字节码",{"2":{"74":1}}],["动态代理机制",{"2":{"74":1}}],["动态代理更加灵活",{"2":{"74":1,"77":1}}],["动态代理",{"0":{"74":1},"1":{"75":1,"76":1,"77":1}}],["动态多态性",{"2":{"27":1}}],["修改的行信息等",{"2":{"114":1}}],["修改的数据页号",{"2":{"114":1}}],["修改的表空间id",{"2":{"114":1}}],["修改",{"2":{"95":1}}],["修改方法的时候",{"2":{"73":1}}],["修饰的变量",{"2":{"58":1}}],["修饰的字段不会被序列化",{"2":{"34":1}}],["删除数据",{"2":{"100":1}}],["删除",{"2":{"73":1,"95":1}}],["新建多个代理类",{"2":{"73":1}}],["新的类继承父类的属性和行为",{"2":{"26":1}}],["缺点",{"2":{"73":1,"75":1,"76":1,"103":1}}],["扩展目标对象的功能",{"2":{"72":1}}],["存储键值对",{"2":{"128":1}}],["存储列表",{"2":{"128":1}}],["存储内容",{"2":{"112":1}}],["存储引擎层提供数据存储和提取的具体实现",{"2":{"94":1}}],["存储引擎",{"0":{"102":1},"1":{"103":1,"104":1,"105":1,"106":1,"107":1,"108":1},"2":{"94":1}}],["存储在这个value数组里面的",{"2":{"58":1}}],["存放integer要写另外⼀个list接口",{"2":{"71":1}}],["存放string类型要写⼀个list接口",{"2":{"71":1}}],["声明的类型参数在使⽤时⽤具体的类型来替换",{"2":{"71":1}}],["声明构造函数",{"2":{"23":1}}],["允许在定义类和接口的时候使⽤类型参数",{"2":{"71":1}}],["泛型参数的安全检查发生在编译时",{"2":{"90":1}}],["泛型可以很好的解决这个问题",{"2":{"71":1}}],["泛型最⼤的好处是可以提⾼代码的复⽤性",{"2":{"71":1}}],["泛型",{"0":{"71":1}}],["抛出的是异常对象",{"2":{"70":1}}],["突然宕机了",{"2":{"69":1}}],["还有一个通用的日志模块",{"2":{"94":1}}],["还有更极端的情况",{"2":{"69":1}}],["还可以声明类",{"2":{"34":1}}],["捕获到的异常",{"2":{"68":1}}],["导致会执行一些预期之外的操作",{"2":{"101":1}}],["导致自增",{"2":{"100":1}}],["导致不连续",{"2":{"100":2}}],["导致的异常",{"2":{"66":1}}],["导致出现安全隐患",{"2":{"59":1}}],["受检查异常",{"2":{"65":1}}],["又可以分为",{"2":{"65":1}}],["截取字符串",{"2":{"63":1}}],["分层开发",{"2":{"129":1}}],["分类标签",{"2":{"129":1}}],["分析",{"2":{"129":1}}],["分析器",{"2":{"94":2}}],["分组查询",{"2":{"129":1}}],["分支管理",{"2":{"129":1}}],["分页操作造成了大量的碎片",{"2":{"108":1}}],["分别表示页中的最小记录和最大记录",{"2":{"107":1}}],["分别是jdk的动态代理",{"2":{"74":1}}],["分别是",{"2":{"44":1}}],["分布式系统",{"2":{"100":1}}],["分割字符串",{"2":{"63":1}}],["去除字符串两端空白",{"2":{"63":1}}],["返回右表所有的行",{"2":{"98":1}}],["返回左表所有的行",{"2":{"98":1}}],["返回引擎的执行结果",{"2":{"96":1}}],["返回的结果相同",{"2":{"67":1}}],["返回异常对象的本地化信息",{"2":{"67":1}}],["返回异常发生时的详细信息",{"2":{"67":1}}],["返回异常发生时的简要描述",{"2":{"67":1}}],["返回字符串长度",{"2":{"63":1}}],["返回字符串的",{"2":{"63":1}}],["返回一个分割后的字符串数组",{"2":{"63":1}}],["返回指定索引处的字符",{"2":{"63":1}}],["返回指定字符的索引",{"2":{"63":1}}],["返回此",{"2":{"50":1}}],["quot",{"0":{"62":2},"2":{"101":2}}],["专门开辟的一块区域",{"2":{"61":1}}],["比较",{"2":{"128":1}}],["比较的是",{"2":{"60":1}}],["比如断电了",{"2":{"111":1}}],["比如关键词是否正确等等",{"2":{"96":1}}],["比如存储过程",{"2":{"94":1}}],["比如一个用户的信息",{"2":{"92":1}}],["比如用户表",{"2":{"92":1}}],["比如访问私有的属性和方法",{"2":{"90":1}}],["比如可以无视泛型参数的安全检查",{"2":{"90":1}}],["比如数据库",{"2":{"85":1}}],["比如远程方法调用",{"2":{"80":1}}],["比如说在目标对象的某个方法执行前后你可以增加一些自定义的操作",{"2":{"72":1}}],["比如将密码用string的类型保存",{"2":{"59":1}}],["比如作为",{"2":{"59":1}}],["比如涉及到钱的场景",{"2":{"47":1}}],["比如",{"2":{"44":1,"92":1}}],["既然我们的string是不可变的",{"2":{"59":1}}],["假设先写redo",{"2":{"97":1}}],["假如string类不是固定不变的",{"2":{"59":1}}],["假若string不是固定不变的",{"2":{"59":1}}],["直接把",{"2":{"115":1}}],["直接恢复数据",{"2":{"99":1}}],["直接与类的元数据交互",{"2":{"88":1}}],["直接返回错误信息",{"2":{"96":1}}],["直接返回",{"2":{"48":1}}],["直到垃圾收集器把它清除",{"2":{"59":1}}],["密码通常情况下都是以string类型保存",{"2":{"59":1}}],["出于安全考虑",{"2":{"59":1}}],["本身就是线程安全的",{"2":{"59":1}}],["本地方法是指在",{"2":{"34":1}}],["单线程操作字符串缓冲区下操作大量数据",{"2":{"57":1}}],["适用于数据量大且需要高并发访问的场景",{"2":{"105":1}}],["适用于框架开发",{"2":{"88":1}}],["适用场景",{"2":{"103":1}}],["适用",{"2":{"57":3}}],["操作少量的数据",{"2":{"57":1}}],["内容生成的混合架构",{"2":{"117":1}}],["内连接",{"2":{"98":1}}],["内部结构是基于页的",{"2":{"115":1}}],["内部暴露",{"2":{"90":1}}],["内部使用",{"2":{"57":1}}],["内存地址",{"2":{"50":1}}],["内存管理",{"2":{"33":1}}],["线程安全初步认知",{"2":{"128":1}}],["线程安全",{"2":{"57":1,"59":1}}],["先查询到",{"2":{"97":1}}],["先连接器检查该语句是否有权限",{"2":{"96":1}}],["先校验这个",{"2":{"94":1}}],["先看看什么是不可变的对象",{"2":{"58":1}}],["先看看什么是编译型语言和解释型语言",{"2":{"37":1}}],["先进行hashcode",{"2":{"55":1}}],["哈希碰撞",{"2":{"55":1}}],["他们也不一定是相等的",{"2":{"55":1}}],["他们三者的关系",{"2":{"38":1}}],["则记录一个相反的update操作",{"2":{"111":1}}],["则需要查询对应的",{"2":{"99":1}}],["则说明",{"2":{"99":1}}],["则返回行",{"2":{"98":1}}],["则返回其引用",{"2":{"61":1}}],["则必须跟一个",{"2":{"68":1}}],["则该方法返回的信息与",{"2":{"67":1}}],["则创建此字符串并放入池中",{"2":{"61":1}}],["则",{"0":{"55":1}}],["则会查找不到",{"2":{"54":1}}],["两个虚拟的伪记录",{"2":{"107":1}}],["两个对象有相同的",{"2":{"55":1}}],["两个对象的hashcode",{"0":{"55":1}}],["两者指向同一片内存空间",{"2":{"32":1}}],["两者都不能直接实例化",{"2":{"28":1}}],["两者的主要区别在于解决问题的方式不同",{"2":{"19":1}}],["再以另一个对象作为键值去查找他们的时候",{"2":{"54":1}}],["再把class文件打成java包",{"2":{"35":1}}],["那为什么",{"2":{"86":1}}],["那么undo",{"2":{"111":1}}],["那么已经分配的自增",{"2":{"100":1}}],["那么自增",{"2":{"100":1}}],["那么机器重启后",{"2":{"97":1}}],["那么成绩这一非主键列应同时依赖于学号和课程编号",{"2":{"93":1}}],["那么这就是个问题了",{"2":{"90":1}}],["那么这个类就不能用jdk动态代理",{"2":{"75":1}}],["那么这个密码可能会被改变",{"2":{"59":1}}],["那么这个对象就是不可变的",{"2":{"58":1}}],["那么它是无法使用cglib做动态代理的",{"2":{"76":1}}],["那么它将首先在字符串常量池中创建",{"2":{"62":1}}],["那么它将一直留在内存中",{"2":{"59":1}}],["那么spring",{"2":{"76":1}}],["那么你只需要安装jre即可",{"2":{"38":1}}],["那就不必在进行equals的比较",{"2":{"55":1}}],["那这两个对象的",{"2":{"54":1,"55":1}}],["其他事务无法对表中的任何数据进行写入或修改",{"2":{"105":1}}],["其他所有异常称为检查",{"2":{"66":1}}],["其中学生所在院校依赖于学号",{"2":{"93":1}}],["其中抽象方法没有具体的实现",{"2":{"28":1}}],["其操作与字节流基本都一样",{"2":{"86":1}}],["其后可接零个或多个",{"2":{"68":1}}],["其实我们的",{"2":{"95":1}}],["其实会在堆内存中创建了一个新的对象",{"2":{"59":1}}],["其实不是的",{"2":{"59":1}}],["其实",{"2":{"53":1}}],["同时",{"2":{"114":1}}],["同时也将一些sql注入攻击的",{"2":{"101":1}}],["同时也会与其他已经加入的对象的",{"2":{"53":1}}],["同时主从同步也会丢失这一条数据",{"2":{"97":1}}],["同时记录redo",{"2":{"97":1}}],["同一个字符串实例可以被多个线程共享",{"2":{"59":1}}],["同个类中的多个方法可以有相同的方法名称",{"2":{"22":1}}],["值也不会变",{"2":{"59":1}}],["值也要相等",{"2":{"54":1,"55":1}}],["值不能被修改",{"2":{"58":1}}],["值",{"2":{"55":1}}],["值却不相等",{"2":{"54":1}}],["值必须是相等",{"2":{"54":1}}],["值的对象",{"2":{"53":1}}],["值作比较",{"2":{"53":1}}],["值来判断对象加入的位置",{"2":{"53":1}}],["值传递是对基本型变量而言的",{"2":{"32":1}}],["整数",{"2":{"52":1,"92":1}}],["覆盖clone",{"2":{"50":1}}],["没有命中缓存的话",{"2":{"94":1}}],["没有实现cloneable的话会抛异常clonenotsupportedexception",{"2":{"50":1}}],["没有返回值",{"2":{"23":1}}],["自查代码规范",{"2":{"129":1}}],["自己分分支开发",{"2":{"129":1}}],["自定义异常",{"2":{"128":1}}],["自增",{"2":{"100":1}}],["自增主键的插入模式",{"2":{"108":1}}],["自增主键",{"0":{"100":1},"2":{"100":1}}],["自身没有方法",{"2":{"50":1}}],["自动装箱时编译器会调用包装类的valueof方法将原始类型的值转换成对象",{"2":{"45":1}}],["自动装箱与拆箱了解吗",{"0":{"45":1}}],["默认为行级锁",{"2":{"104":1}}],["默认为public",{"2":{"28":1}}],["默认比较地址值等价于==",{"2":{"51":1}}],["默认比较两个引用变量是否指向同一个对象",{"2":{"50":1}}],["默认的实现hashcode值是根据内存地址换算出来",{"2":{"50":1}}],["默认输出对象地址",{"2":{"50":1}}],["html",{"2":{"129":1}}],["http",{"2":{"129":1}}],["httpservlet",{"2":{"129":1}}],["https",{"2":{"129":6}}],["hikaricp",{"2":{"129":1}}],["highlighted",{"2":{"122":2}}],["highlighting",{"0":{"122":1},"2":{"122":2}}],["head",{"2":{"129":1}}],["header",{"2":{"107":2}}],["helloworld",{"2":{"128":1}}],["home",{"2":{"128":1}}],["hashmap",{"2":{"128":1}}],["hash",{"2":{"59":1,"129":1}}],["hashtable或hashset中",{"2":{"54":1}}],["hashset",{"2":{"53":5}}],["hashcode方法主要是用来提升对象比较的效率",{"2":{"55":1}}],["hashcode",{"0":{"52":1,"53":1,"54":1},"2":{"50":2,"52":1,"53":7,"54":4,"55":2}}],["hhhhh",{"0":{"12":1},"1":{"13":1}}],["范围的缓存数据",{"2":{"48":1}}],["的数据到内存时",{"2":{"115":1}}],["的能力",{"0":{"115":1},"2":{"115":1}}],["的redo",{"2":{"114":1}}],["的执行流程",{"0":{"114":1}}],["的实现也用到了反射",{"2":{"89":1}}],["的过程即输出",{"2":{"85":1}}],["的时候",{"2":{"80":1,"89":1}}],["的访问",{"2":{"72":1}}],["的子类覆盖这个方法",{"2":{"67":1}}],["的区别",{"0":{"66":1}}],["的引用",{"2":{"62":1}}],["的",{"2":{"60":1}}],["的键",{"2":{"59":1}}],["的比较",{"2":{"55":1}}],["的次数",{"2":{"53":1}}],["的作用是获取哈希码",{"2":{"52":1}}],["的运行时类",{"2":{"50":1}}],["的相应类型的缓存数据",{"2":{"48":1}}],["的系统上都可以运行不变",{"2":{"33":1}}],["包中的",{"2":{"65":1}}],["包装类型的缓存机制了解么",{"0":{"48":1}}],["包括ddl和dml语句",{"2":{"113":1}}],["包括选择合适的索引",{"2":{"94":1}}],["包括索引的选择和表的读取顺序",{"2":{"94":1}}],["包括基本数据类型的值不能改变",{"2":{"58":1}}],["包括使用指针和手动分配及释放内存",{"2":{"33":1}}],["包括函数",{"2":{"33":1}}],["包括参数的类型",{"2":{"22":1}}],["来使用来自外部的用户自定义类",{"2":{"90":1}}],["来进行捕获不建议通过catch捕获",{"2":{"65":1}}],["来进行捕获",{"2":{"65":1}}],["来做的",{"2":{"47":1}}],["来存储",{"2":{"43":1}}],["大小不固定",{"2":{"107":2}}],["大概有4步",{"2":{"96":1}}],["大部分关系型数据库都支持事务的四大特性",{"2":{"92":1}}],["大部分需要浮点数精确运算结果的业务场景",{"2":{"47":1}}],["大大增加程序的重用性和易维护性",{"2":{"26":1}}],["宽度是有限的",{"2":{"46":1}}],["原理方面",{"2":{"45":1}}],["原理是什么",{"0":{"45":1}}],["装箱",{"2":{"45":1}}],["丰富了基本类型的操作",{"2":{"44":1}}],["使得在锁持有期间",{"2":{"105":1}}],["使得不同存储引擎能够与server层无缝对接",{"2":{"94":1}}],["使得它具有了对象的性质",{"2":{"44":1}}],["使每个属性都直接依赖于主键",{"2":{"93":1}}],["使用最广泛",{"2":{"103":1}}],["使用全局唯一",{"2":{"100":1}}],["使用",{"2":{"67":1,"100":1,"120":1}}],["使用赋值操作是无法达到目的的",{"2":{"50":1}}],["使用class",{"2":{"39":1}}],["使用反射技术要求程序必须在一个没有安全限制的环境中运行",{"2":{"90":1}}],["使用反射",{"2":{"39":1}}],["使用try",{"2":{"35":1}}],["很多地方都需要使用对象而不是基本数据类型",{"2":{"44":1}}],["是一种结合信息检索技术和",{"2":{"117":1}}],["是一种面向对象语言",{"2":{"44":1}}],["是无法恢复的",{"2":{"115":1}}],["是追加日志",{"2":{"115":1}}],["是mysql数据库中的一种日志文件",{"2":{"114":1}}],["是事务性存储引擎",{"2":{"103":1}}],["是如何保证数据不丢失的",{"0":{"99":1}}],["是",{"0":{"115":1},"2":{"61":1,"88":1,"99":1}}],["是线程安全的",{"2":{"57":1}}],["是否支持聚集索引",{"2":{"104":1}}],["是否支持mvcc",{"2":{"104":1}}],["是否支持外键",{"2":{"104":1}}],["是否支持事务",{"2":{"104":1}}],["是否支持行级锁",{"2":{"104":1}}],["是否执行过",{"2":{"94":1}}],["是否也一定为",{"0":{"55":1}}],["是否是同一个对象",{"2":{"51":1}}],["是否可被",{"0":{"23":1}}],["6",{"2":{"44":1,"129":1}}],["64bit",{"2":{"43":2}}],["完全不会对其生存时间构成影响",{"2":{"41":1}}],["无法替代的",{"0":{"115":1}}],["无法对这些代码进行优化",{"2":{"90":1}}],["无论",{"2":{"101":1}}],["无论是否捕获或处理异常",{"2":{"68":1}}],["无论当前内存是否足够",{"2":{"41":1}}],["无限循环的小数存储在计算机时",{"2":{"46":1}}],["无需调用",{"2":{"23":1}}],["被替换为任何参数",{"2":{"101":1}}],["被弱引用关联的对象只能生存到下一次垃圾收集发生之前",{"2":{"41":1}}],["被复制对象的所有变量都含有与原来的对象相同的值",{"2":{"30":1}}],["对于innodb",{"2":{"104":1}}],["对于框架来说实际是影响不大的",{"2":{"90":1}}],["对于三者使用的总结",{"2":{"57":1}}],["对于复合数据类型",{"2":{"51":1}}],["对于基本数据类型",{"2":{"51":1}}],["对于软引用关联着的对象",{"2":{"41":1}}],["对象型的是",{"2":{"81":1}}],["对象在进行网络传输",{"2":{"80":1}}],["对象",{"2":{"79":1,"88":1}}],["对象保存在文件中",{"2":{"79":1}}],["对象比如将",{"2":{"79":1}}],["对象封装的异常信息",{"2":{"67":1}}],["对象进行拷贝",{"2":{"30":1}}],["对象的相等一般比较的是内存中存放的内容是否相等",{"2":{"21":1}}],["对象的相等和引用相等的区别",{"0":{"21":1}}],["对象引用存放在栈内存中",{"2":{"20":1}}],["对象引用指向对象实例",{"2":{"20":1}}],["对象实例在堆内存中",{"2":{"20":1}}],["对象实体与对象引用有何不同",{"0":{"20":1}}],["垃圾收集器永远不会回收掉被引用的对象",{"2":{"41":1}}],["类与对象",{"2":{"128":1}}],["类浏览器和可视化开发环境",{"2":{"90":1}}],["类常用方法有哪些",{"0":{"67":1}}],["类定义错误",{"2":{"65":1}}],["类有两个重要的子类",{"2":{"65":1}}],["类的常用方法有哪些",{"0":{"63":1}}],["类",{"2":{"61":1,"65":1}}],["类似",{"2":{"41":1}}],["类型数组",{"2":{"63":1}}],["类型",{"2":{"44":1}}],["类型的变量可以存储任意的",{"2":{"34":1}}],["类型占用的空间较小",{"2":{"34":1}}],["强引用",{"2":{"41":1}}],["虚引用",{"2":{"41":2}}],["虚拟机内存不够错误",{"2":{"65":1}}],["虚拟机运行错误",{"2":{"65":1}}],["虚拟机",{"2":{"38":1,"65":1}}],["弱引用",{"2":{"41":2}}],["软引用",{"2":{"41":2}}],["将之前的",{"2":{"129":1}}],["将生成的向量和对应文本存入向量数据库",{"2":{"120":1}}],["将长文档分割成适当大小的片段",{"2":{"119":1}}],["将",{"2":{"97":1}}],["将对象从缓存数据库中读取出来需要反序列化",{"2":{"80":1}}],["将对象从文件中读取出来需要进行反序列化",{"2":{"80":1}}],["将对象存储到内存之前需要进行序列化",{"2":{"80":1}}],["将对象存储到数据库",{"2":{"80":1}}],["将对象存储到文件之前需要进行序列化",{"2":{"80":1}}],["将在序列化过程中所生成的二进制字节流转换成数据结构或者对象的过程",{"2":{"79":1}}],["将数据结构或对象转换成二进制字节流的过程",{"2":{"79":1}}],["将目标对象注入进代理类",{"2":{"73":1}}],["将字符串转成大写字符",{"2":{"63":1}}],["将字符串转成小写字母",{"2":{"63":1}}],["将会引起各种安全隐患",{"2":{"59":1}}],["将会把这些对象列进回收范围之中进行第二次回收",{"2":{"41":1}}],["将与对象相关的信息映射成一个哈希值",{"2":{"50":1}}],["将包装类型转换为基本数据类型",{"2":{"45":1}}],["将基本类型用它们对应的引用类型包装起来",{"2":{"45":1}}],["将引用分为强引用",{"2":{"41":1}}],["将代码编译成",{"2":{"35":1}}],["普通代码块",{"2":{"40":1}}],["普通属性",{"2":{"40":1}}],["调试技巧",{"2":{"129":2}}],["调试与排查",{"2":{"129":1}}],["调试器需要能够检查一个类里的私有成员",{"2":{"90":1}}],["调试器和测试工具",{"2":{"90":1}}],["调试器",{"2":{"38":1}}],["调用者",{"2":{"70":1}}],["调用clone方法时",{"2":{"50":1}}],["调用java",{"2":{"39":1}}],["调用对象的clone",{"2":{"39":1}}],["用户管理",{"2":{"129":1}}],["用户系统",{"2":{"129":1}}],["用户表",{"2":{"129":1}}],["用户登录注册",{"2":{"129":1}}],["用户在操作myisam表时",{"2":{"104":1}}],["用",{"2":{"129":3}}],["用特定的语气和用户交流",{"2":{"117":1}}],["用来描述非必需对象",{"2":{"41":1}}],["用来描述一些还有用但并非必需的对象",{"2":{"41":1}}],["用new语句创建对象",{"2":{"39":1}}],["用于记录数据库中每个事务的修改操作",{"2":{"114":1}}],["用于数据恢复",{"2":{"113":1}}],["用于事务回滚时恢复数据到原始状态",{"2":{"112":1}}],["用于事务回滚和mvcc",{"2":{"112":1}}],["用于检验页是否完整",{"2":{"107":1}}],["用于处理",{"2":{"68":1}}],["用于指定方法没有返回值",{"2":{"34":1}}],["用于指定多线程代码中的同步方法",{"2":{"34":1}}],["用于限制浮点数计算的精度",{"2":{"34":1}}],["用于判断对象是否属于某个类型",{"2":{"34":1}}],["用于实现接口",{"2":{"34":1}}],["用于表示长整数值",{"2":{"34":1}}],["用于表示某个变量",{"2":{"34":1}}],["用于表示一个",{"2":{"34":1}}],["用于定义一组固定的常量",{"2":{"34":1}}],["用于声明异常",{"2":{"34":1}}],["用于声明一个本地方法",{"2":{"34":1}}],["用于声明一个双精度浮点类型的变量",{"2":{"34":1}}],["用于声明一个字符类型的变量",{"2":{"34":1}}],["用于声明抽象类",{"2":{"34":1}}],["用于捕获异常",{"2":{"68":1}}],["用于捕获",{"2":{"34":1}}],["用于跳出循环结构",{"2":{"34":1}}],["+",{"2":{"38":4,"128":1,"129":6}}],["总之",{"2":{"114":1}}],["总结来说",{"2":{"105":1}}],["总结一下jdk",{"2":{"38":1}}],["总是执行",{"2":{"34":1}}],["最后",{"2":{"38":1}}],["另外非主键列必须直接依赖于主键",{"2":{"93":1}}],["另外包含两部分内容",{"2":{"93":1}}],["另外",{"2":{"38":1,"77":1,"90":1}}],["kafka",{"2":{"129":1}}],["key",{"2":{"96":1}}],["killed",{"2":{"69":1}}],["kit",{"2":{"38":1}}],["kskdklkop",{"0":{"13":1}}],["有一个很大的区别就是",{"2":{"115":1}}],["有缓存会使用缓存",{"2":{"97":1}}],["有表结构",{"2":{"92":1}}],["有两种方式",{"2":{"73":1}}],["有以下两种情况finally不会被执行",{"2":{"69":1}}],["有什么区别",{"0":{"65":1,"104":1},"1":{"105":1,"106":1}}],["有什么用",{"0":{"52":1}}],["有何区别",{"0":{"60":1}}],["有",{"2":{"38":1}}],["有符号整数",{"2":{"34":1}}],["针对不同的系统有不同的",{"2":{"38":1}}],["就能",{"2":{"117":1}}],["就像给",{"2":{"117":1}}],["就一定会写入日志",{"2":{"115":1}}],["就会自动开辟一个新的页",{"2":{"108":1}}],["就会丢失这一条数据",{"2":{"97":1}}],["就会执行后续的操作",{"2":{"94":1}}],["就会直接返回给客户端",{"2":{"94":1}}],["就会重新散列到其他位置",{"2":{"53":1}}],["就可以恢复数据",{"2":{"115":1}}],["就可以做进一步的处理",{"2":{"89":1}}],["就可以运行字节码文件",{"2":{"36":1}}],["就不会让其加入操作成功",{"2":{"53":1}}],["就出现了包装类型",{"2":{"44":1}}],["就是一种建立在关系模型的基础上的数据库",{"2":{"92":1}}],["就是在线程运行",{"2":{"69":1}}],["就是",{"2":{"38":1}}],["就是java",{"2":{"38":1}}],["就是我们耳熟能详的",{"2":{"38":1}}],["英文名称",{"2":{"38":3}}],["解释器来解释执行",{"2":{"37":1}}],["解释型语言开发效率比较快",{"2":{"37":1}}],["解释型语言open",{"2":{"37":1}}],["解释型",{"2":{"37":1}}],["生成策略",{"2":{"100":1}}],["生成执行计划",{"2":{"94":1}}],["生成的动态代理类和目标类都实现相同的接口",{"2":{"75":1}}],["生成字节码",{"2":{"37":1}}],["生成类的对象时自动执行",{"2":{"23":1}}],["编辑",{"2":{"129":1}}],["编写复杂报表",{"2":{"129":1}}],["编写",{"2":{"129":2}}],["编写小工具",{"2":{"129":1}}],["编写的程序需要先经过编译步骤",{"2":{"37":1}}],["编译器则通过调用类似intvalue",{"2":{"45":1}}],["编译器",{"2":{"38":1}}],["编译语言的执行速度比较快",{"2":{"37":1}}],["编译型语言open",{"2":{"37":1}}],["编译型",{"2":{"37":1}}],["编译与解释并存",{"0":{"37":1}}],["编译后会生成",{"2":{"36":1}}],["由这个代理类实现多个接口",{"2":{"73":1}}],["由虚拟机将程序解释给本地系统执行",{"2":{"38":1}}],["由",{"2":{"37":1}}],["由于每次插入主键的值近似于随机",{"2":{"108":1}}],["由于反射允许代码执行一些在正常情况下不被允许的操作",{"2":{"90":1}}],["由于代理对象要实现与目标对象一致的接口",{"2":{"73":1}}],["由于",{"2":{"34":1}}],["由于java简化了内存管理和垃圾回收机制",{"2":{"33":1}}],["为练习项目创建",{"2":{"129":1}}],["为1的记录",{"2":{"97":1}}],["为各种框架提供开箱即用的功能提供了便利",{"2":{"90":1}}],["为了避免自增",{"2":{"100":1}}],["为了提升性能和减少内存消耗针对字符串",{"2":{"61":1}}],["为了让基本类型也具有对象的特征",{"2":{"44":1}}],["为例子来说明为什么要有",{"2":{"53":1}}],["为什么",{"0":{"115":1}}],["为什么要用自增",{"0":{"108":1}}],["为什么要有",{"0":{"53":1}}],["为什么记录完redo",{"2":{"97":1}}],["为什么你通过一个",{"2":{"89":1}}],["为什么你使用",{"2":{"89":1}}],["为什么string要设计成不可变的",{"0":{"59":1}}],["为什么不可变",{"0":{"58":1},"1":{"59":1}}],["为什么重写",{"0":{"54":1}}],["为什么会出现这个问题呢",{"2":{"46":1}}],["为什么浮点数运算的时候会有精度丢失的风险",{"0":{"46":1},"1":{"47":1}}],["为什么需要包装类",{"0":{"44":1}}],["为什么说",{"0":{"37":1}}],["为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知",{"2":{"41":1}}],["为机器代码后再执行",{"2":{"37":1}}],["等基础",{"2":{"129":1}}],["等列",{"2":{"93":1}}],["等",{"2":{"50":1,"65":1,"100":1,"128":1}}],["等类型放进去的",{"2":{"44":1}}],["等等框架中都大量使用了反射机制",{"2":{"89":1}}],["等等",{"2":{"37":2}}],["等级单位觉得的复合快进到佛教文化",{"2":{"15":1}}],["group",{"2":{"129":1}}],["gram",{"2":{"119":1}}],["gitee",{"2":{"129":1}}],["github",{"2":{"129":2}}],["git",{"2":{"129":6}}],["guides",{"2":{"129":2}}],["gap",{"2":{"106":1}}],["gt",{"2":{"106":1}}],["generation",{"2":{"76":1,"117":1}}],["getting",{"2":{"129":2}}],["getter",{"2":{"128":1}}],["getlocalizedmessage",{"2":{"67":1}}],["getmessage",{"2":{"67":2}}],["getbytes",{"2":{"63":1}}],["getclass",{"2":{"50":1}}],["go",{"2":{"37":1}}],["gc",{"2":{"33":1}}],["常用依赖",{"2":{"129":1}}],["常用",{"2":{"128":1}}],["常用于java反射机制",{"2":{"50":1}}],["常用于判断条件",{"2":{"34":1}}],["常见存储引擎",{"0":{"103":1}}],["常见应用场景",{"0":{"80":1}}],["常见的解释性语言有",{"2":{"37":1}}],["常见的编译性语言有",{"2":{"37":1}}],["会拼接对应参数",{"2":{"101":1}}],["会跳过这个值",{"2":{"100":1}}],["会提示错误位置",{"2":{"94":1}}],["会先从外部知识库中检索相关信息",{"2":{"117":1}}],["会先查询缓存",{"2":{"94":1,"96":1}}],["会先计算对象的",{"2":{"53":1}}],["会创建",{"2":{"62":1}}],["会创建几个对象",{"0":{"62":1}}],["会缓存到字符串常量池中",{"2":{"59":1}}],["会假设对象没有重复出现",{"2":{"53":1}}],["会判断有没有实现cloneable接口",{"2":{"50":1}}],["会通过编译器open",{"2":{"37":1}}],["会在原来的对象和它的副本之间共享",{"2":{"30":1}}],["我们的数据都被存放在了各种表中",{"2":{"92":1}}],["我们应该避免在经常被执行的代码或对性能要求很高的程序中使用反射",{"2":{"90":1}}],["我们可以直接代理实现类",{"2":{"74":1}}],["我们可以将string",{"2":{"71":1}}],["我们可以将高级编程语言按照程序的执行方式分为两种",{"2":{"37":1}}],["我们不需要针对每个目标类都单独创建一个代理类",{"2":{"74":1}}],["我们达到了功能增强的目的",{"2":{"73":1}}],["我们就可以通过代理类屏蔽对目标对象的访问",{"2":{"73":1}}],["我们使用代理对象来代替对真实对象",{"2":{"72":1}}],["我们即使不处理不受检查异常也可以正常通过编译",{"2":{"66":1}}],["我们没办法通过",{"2":{"65":1}}],["我们每次调用replace等方法",{"2":{"59":1}}],["我们以",{"2":{"53":1}}],["我们知道计算机是二进制的",{"2":{"46":1}}],["我们是无法将",{"2":{"44":1}}],["我们编写的java程序必须要在jre才能运行",{"2":{"38":1}}],["我们编写的java代码",{"2":{"36":1}}],["程序",{"2":{"128":1}}],["程序可以绕过编译时的静态检查",{"2":{"88":1}}],["程序未执行到try代码块",{"2":{"69":1}}],["程序本身可以处理的异常",{"2":{"65":1}}],["程序要经过先编译",{"2":{"37":1}}],["程序员可以找到出错的处理代码",{"2":{"35":1}}],["程序将立即跳出当前循环或",{"2":{"34":1}}],["异常处理",{"2":{"128":1}}],["异常处理是java中使得程序更稳健的另一个特征",{"2":{"35":1}}],["异常",{"0":{"64":1},"1":{"65":1,"66":1,"67":1,"68":1,"69":1,"70":1},"2":{"66":1}}],["异常是某种类似于错误的异常条件出现的信号",{"2":{"35":1}}],["然后将这些检索到的内容作为额外上下文提供给模型",{"2":{"117":1}}],["然后根据redo",{"2":{"114":1}}],["然后写binlog",{"2":{"97":1}}],["然后调用引擎接口",{"2":{"97":2}}],["然后判断这个",{"2":{"96":1}}],["然后通过存储引擎接口访问数据",{"2":{"94":1}}],["然后进行语法分析",{"2":{"94":1}}],["然后获取到类",{"2":{"89":1}}],["然后在代理类的对应方法调用目标类中的对应方法",{"2":{"73":1}}],["然后在堆空间中创建",{"2":{"62":1}}],["然后其value数组引用指向不同的对象",{"2":{"59":1}}],["然后拿到linux上运行",{"2":{"35":1}}],["然后用对象执行方法的方式解决问题",{"2":{"19":1}}],["你获取到注解之后",{"2":{"89":1}}],["你才能这么轻松地使用各种框架",{"2":{"89":1}}],["你可以在windows平台编写代码",{"2":{"35":1}}],["你仍然可以有全局函数和全局变量",{"2":{"33":1}}],["可选",{"2":{"129":2}}],["可确保",{"2":{"115":1}}],["可行的方案是拷贝数据文件",{"2":{"104":1}}],["可移植性",{"2":{"104":1}}],["可防sql注入",{"2":{"101":1}}],["可能会导致不连续",{"2":{"100":1}}],["可能会涉及到数据的重新分配",{"2":{"100":1}}],["可视化开发环境",{"2":{"90":1}}],["可扩展性",{"2":{"90":1}}],["可变",{"2":{"57":1}}],["可变性",{"2":{"57":1}}],["可见性提升为public",{"2":{"50":1}}],["可用于在方法或构造方法中引用当前对象",{"2":{"34":1}}],["可用于调用父类的方法或者字段",{"2":{"34":1}}],["可以捕获到文本的语义特征",{"2":{"120":1}}],["可以解决大模型的知识时效性限制和幻觉问题",{"2":{"117":1}}],["可以帮助数据库管理员或开发者优化数据库的性能",{"2":{"106":1}}],["可以采取以下措施",{"2":{"100":1}}],["可以分为两种",{"2":{"95":1}}],["可以继续拆分成更细致的部分",{"2":{"93":1}}],["可以从利用反射中可用的类型信息中受益",{"2":{"90":1}}],["可以直接代理实现类",{"2":{"77":1}}],["可以直接返回缓存的引用",{"2":{"59":1}}],["可以在表的尾部插入新的数据",{"2":{"104":1}}],["可以在运行时动态生成类的字节码",{"2":{"76":1}}],["可以在子类对方法进行重写",{"2":{"22":1}}],["可以不申明或不捕获",{"2":{"70":1}}],["可以不处理",{"2":{"65":1}}],["可以生成本地化信息",{"2":{"67":1}}],["可以catch或者throws",{"2":{"66":1}}],["可以通过",{"2":{"65":1}}],["可以重写equals方法",{"2":{"50":1}}],["可以重写tostring方法",{"2":{"50":1}}],["可以实现对浮点数的运算",{"2":{"47":1}}],["可以使⽤用",{"2":{"43":1}}],["可以使用单引",{"2":{"34":1}}],["可以看到",{"2":{"38":1}}],["可以根据需要进",{"2":{"34":1}}],["可以根据参数的不同",{"2":{"27":1}}],["可以用",{"2":{"20":1}}],["规定",{"2":{"34":1}}],["该范围内的所有浮点数计算将遵循",{"2":{"34":1}}],["时没有重写",{"2":{"54":1}}],["时一定要重写",{"0":{"54":1}}],["时",{"2":{"34":1,"53":1,"94":1}}],["法必须声明为",{"2":{"34":1}}],["方",{"2":{"34":1}}],["方法及属性的机制",{"2":{"88":1}}],["方法是比较的对象的内存地址",{"2":{"60":1}}],["方法是被重写过的",{"2":{"60":1}}],["方法判断是相等的两个对象",{"2":{"54":1}}],["方法判断两个对象是相等的",{"2":{"54":1,"55":1}}],["方法的参数上的注解",{"2":{"89":1}}],["方法的话就可能会导致",{"2":{"54":1}}],["方法的重写描述的是父类和子类之间的",{"2":{"22":1}}],["方法来检查",{"2":{"53":1}}],["方法",{"2":{"39":2,"50":2,"89":1,"128":1,"129":1}}],["方法或类是最终的",{"2":{"34":1}}],["方法实现",{"2":{"28":1}}],["方法名与形参列表必须一致",{"2":{"22":1}}],["方法重写",{"2":{"128":1}}],["方法重写时",{"2":{"22":1}}],["方法重载和重写的区别",{"0":{"22":1}}],["所有跨存储引擎的功能都在这一层实现",{"2":{"94":1}}],["所有输出流的基类",{"2":{"85":1}}],["所有的存储引擎中只有",{"2":{"103":1}}],["所有的输入流的基类",{"2":{"85":1}}],["所有的异常都有一个共同的祖先",{"2":{"65":1}}],["所有的java程序会首先被编译为",{"2":{"38":1}}],["所有类可见",{"2":{"34":1}}],["所以在跨平台的数据转移中会很方便",{"2":{"104":1}}],["所以使用反射可能会导致意料之外的副作用",{"2":{"90":1}}],["所以有字符流",{"2":{"86":1}}],["所以我们通过字节流读取文件的时候一般都是逐个字节转换就会导致乱码",{"2":{"86":1}}],["所以不会被序列化",{"2":{"83":1}}],["所以",{"2":{"58":1,"90":1}}],["所以实体类使用克隆的前提是",{"2":{"50":1}}],["所以就会导致小数精度发生损失的情况",{"2":{"46":1}}],["所以没有包含任何开发工具",{"2":{"38":1}}],["所以对引用对象进行操作会同时改变原对象",{"2":{"32":1}}],["所以你可以看到一个类中有多个构造函数的情况",{"2":{"23":1}}],["除了可以声明方法和变量",{"2":{"34":1}}],["中间件课程",{"2":{"129":1}}],["中间件与拓展",{"2":{"129":1}}],["中抹掉",{"2":{"115":1}}],["中分为输入流和输出流",{"2":{"85":1}}],["中",{"2":{"65":1,"114":1}}],["中的数据都恢复至内存就可以了",{"2":{"115":1}}],["中的一大利器",{"2":{"89":1}}],["中的一种基本数据类型",{"2":{"34":1}}],["中的",{"2":{"60":1,"74":1,"77":1}}],["中实现的方法",{"2":{"34":1}}],["码",{"2":{"34":1}}],["代理类这些都变成了一个个实际的",{"2":{"77":1}}],["代理类根据目标类实现的接口动态生成",{"2":{"75":1}}],["代理类在编译阶段生成",{"2":{"73":1}}],["代理模式的主要作用是扩展目标对象的功能",{"2":{"72":1}}],["代理模式是一种比较好理解的设计模式",{"2":{"72":1}}],["代理",{"0":{"72":1},"1":{"73":1,"74":1,"75":1,"76":1,"77":1}}],["代码评审",{"2":{"129":1}}],["代码托管",{"2":{"129":1}}],["代码规范",{"2":{"129":1}}],["代码的行为就有可能也随着变化",{"2":{"90":1}}],["代码在编译过程中",{"2":{"66":1}}],["代码中声明但在本地代码",{"2":{"34":1}}],["代",{"2":{"34":1}}],["lsn",{"2":{"114":1}}],["lt",{"2":{"106":1}}],["left",{"0":{"98":1},"2":{"98":1}}],["length",{"2":{"63":1}}],["locks",{"2":{"106":2}}],["logback",{"2":{"129":1}}],["log4j",{"2":{"129":1}}],["log进行重放",{"2":{"115":1}}],["log进入",{"2":{"97":1}}],["log的主要作用是记录数据库中每个事务的修改操作",{"2":{"114":1}}],["log的区别",{"0":{"112":1}}],["log文件后",{"2":{"114":1}}],["log文件的大小是有限的",{"2":{"114":1}}],["log文件",{"2":{"114":1}}],["log文件中的",{"2":{"114":1}}],["log文件中的redo",{"2":{"114":1}}],["log文件中",{"2":{"114":2}}],["log有什么区别",{"0":{"113":1}}],["log和redo",{"0":{"113":1},"2":{"112":1,"113":1}}],["log则负责事务的回滚和实现mvcc",{"2":{"111":1}}],["log会记录一个delete操作",{"2":{"111":1}}],["log记录了记录了事务对数据库所做的更改的相反操作",{"2":{"111":1}}],["log回滚日志",{"2":{"111":1}}],["log恢复到断电前的时刻",{"2":{"111":1}}],["log恢复数据",{"2":{"97":1}}],["log保证了事务的持久性",{"2":{"111":1}}],["log是innodb存储引擎中实现事务持久性和原子性的关键机制",{"2":{"112":1}}],["log是mysql的回滚日志",{"2":{"111":1}}],["log是mysql的二进制日志",{"2":{"111":1}}],["log是重做日志",{"2":{"111":1}}],["log重做日志",{"2":{"111":1}}],["log二进制日志",{"2":{"111":1}}],["log日志",{"0":{"110":1},"1":{"111":1,"112":1,"113":1,"114":1,"115":1}}],["log后",{"2":{"97":1}}],["log直接提交",{"2":{"97":1}}],["log为提交状态",{"2":{"97":1}}],["log",{"0":{"110":2,"112":1,"114":1,"115":1},"1":{"111":2,"112":2,"113":2,"114":2,"115":2},"2":{"97":2,"111":3,"112":6,"113":7,"114":13,"115":12}}],["long",{"2":{"34":1,"43":2,"44":1,"48":1}}],["lang",{"2":{"65":1}}],["liaoxuefeng",{"2":{"129":1}}],["line",{"2":{"122":1}}],["linux",{"2":{"38":1}}],["like",{"2":{"122":1}}],["like等",{"2":{"106":1}}],["library",{"2":{"76":1}}],["list",{"2":{"7":1,"124":1}}],["枚举",{"2":{"34":1,"82":1}}],["el",{"2":{"129":1}}],["else",{"2":{"128":1}}],["eclipse",{"2":{"128":1}}],["embedding",{"2":{"120":1}}],["error",{"0":{"65":1},"2":{"65":2}}],["explain",{"2":{"129":1}}],["export",{"2":{"122":1}}],["extends",{"2":{"128":1}}],["extensions",{"2":{"121":1,"124":1}}],["extension",{"0":{"121":1},"1":{"122":1,"123":1,"124":1}}],["exception由具体的环境",{"2":{"66":1}}],["exception包括runtimeexception和error类",{"2":{"66":1}}],["exception",{"0":{"65":1},"2":{"65":4}}],["examples",{"0":{"2":1,"121":1},"1":{"3":1,"4":1,"5":1,"6":1,"7":1,"122":1,"123":1,"124":1}}],["equals和引用相等==的区别",{"0":{"51":1}}],["equals",{"0":{"54":1,"55":1,"60":2},"2":{"50":2,"51":1,"53":3,"54":3,"55":1,"60":2,"63":1}}],["environment",{"2":{"38":1}}],["enum",{"2":{"34":1}}],["号将字符括起来来表示",{"2":{"34":1}}],["字段类型设计",{"2":{"129":1}}],["字符流",{"2":{"128":1}}],["字符串操作",{"2":{"128":1}}],["字符串",{"2":{"92":1}}],["字符串比较",{"2":{"63":1}}],["字符串替换",{"2":{"63":1}}],["字符串常量池",{"2":{"61":1}}],["字符串常量池优化",{"2":{"59":1}}],["字符串的值是否相等",{"2":{"60":1}}],["字符",{"2":{"34":1}}],["字节流",{"2":{"128":1}}],["字节码文件",{"2":{"36":1}}],["字节",{"2":{"34":1,"107":1}}],["uuid",{"2":{"100":1}}],["update",{"2":{"97":1,"104":1}}],["undo",{"0":{"110":1,"112":1},"1":{"111":1,"112":1,"113":1,"114":1,"115":1},"2":{"111":5,"112":4}}],["unchecked",{"2":{"65":1,"66":1}}],["unicode",{"2":{"34":1}}],["user",{"2":{"97":1,"107":1}}],["used",{"2":{"2":1}}],["usedata",{"2":{"2":3}}],["usage",{"2":{"2":1}}],["754",{"2":{"34":1}}],["7",{"2":{"34":1,"44":1}}],["恢复程序状态等",{"2":{"34":1}}],["例如临键锁",{"2":{"106":1}}],["例如",{"2":{"65":1,"93":2,"111":1}}],["例如输出错误信息",{"2":{"34":1}}],["例如运算符重载",{"2":{"33":1}}],["块或",{"2":{"68":1}}],["块里的语句都会被执行",{"2":{"68":1}}],["块",{"2":{"68":4}}],["块中遇到",{"2":{"68":1}}],["块中的代码",{"2":{"34":1}}],["块中",{"2":{"34":1}}],["块中可以捕获这些异常并",{"2":{"34":1}}],["块中可能会抛出异常",{"2":{"34":1}}],["块可以捕获特定类型的异常",{"2":{"34":1}}],["块可以有多个",{"2":{"34":1}}],["500",{"2":{"129":1}}],["512",{"2":{"119":1}}],["5中引⼊的⼀个新特性",{"2":{"71":1}}],["5",{"2":{"34":1,"44":1}}],["空间",{"2":{"34":1}}],["以便在系统发生故障时能够恢复未完成的事务",{"2":{"114":1}}],["以便在需要回滚时可以恢复数据",{"2":{"111":1}}],["以释放磁盘空间",{"2":{"114":1}}],["以事件形式记录",{"2":{"113":1}}],["以此来保证数据的完整性",{"2":{"111":1}}],["以提供更灵活的并发控制机制",{"2":{"106":1}}],["以下是对这两种行锁的详细解释",{"2":{"106":1}}],["以下是具体分析",{"2":{"105":1}}],["以加速读操作",{"2":{"103":1}}],["以上述sql为例使用preparedstatement预编译后的sql为",{"2":{"101":1}}],["以这条",{"2":{"96":1}}],["以确保锁定的是单一记录",{"2":{"106":1}}],["以确保一组测试中有较高的代码覆盖率",{"2":{"90":1}}],["以确保跨平台的浮点数计算的一致性",{"2":{"34":1}}],["以帮助程序员编写正确的代码",{"2":{"90":1}}],["以及意向锁等",{"2":{"106":1}}],["以及cglib的动态代理",{"2":{"74":1}}],["以及抽象方法",{"2":{"34":1}}],["以list接口为例",{"2":{"71":1}}],["以节省内存",{"2":{"34":1}}],["它会扫描所有的redo",{"2":{"114":1}}],["它会锁定整张表",{"2":{"105":1}}],["它用于在事务回滚或者数据库崩溃时撤销已提交的事务对数据库的修改",{"2":{"111":1}}],["它们是什么",{"0":{"111":1}}],["它基于非唯一索引",{"2":{"106":1}}],["它要求被锁定的列必须是主键或唯一索引列",{"2":{"106":1}}],["它允许多个事务同时对同一表的不同行进行操作",{"2":{"105":1}}],["它允许扩展编译时检查潜在类型不匹配问题的功能",{"2":{"35":1}}],["它采用表的形式来存储数据",{"2":{"92":1}}],["它告诉代码只要是实现了serializable接口的类都是可以被序列化的",{"2":{"82":1}}],["它的执行流程如下",{"2":{"114":1}}],["它的主要作用是保证服务崩溃后",{"2":{"111":1}}],["它的对象才能被序列化",{"2":{"82":1}}],["它的值不需要维持",{"2":{"81":1}}],["它的值范围是",{"2":{"34":1}}],["它的上级",{"2":{"70":1}}],["它内部还有很多substring",{"2":{"59":1}}],["它是最弱的一种引用关系",{"2":{"41":1}}],["它主要包含两个部分",{"2":{"38":1}}],["它不支持c风格的隐式声明",{"2":{"35":1}}],["它通常用于与操作系统或其他本地库进行交互",{"2":{"34":1}}],["它通常用于处理大量的数据",{"2":{"34":1}}],["到处运行",{"2":{"35":1}}],["到",{"2":{"34":1}}],["位",{"2":{"34":1}}],["896043488029600",{"2":{"129":1}}],["8中汉字占3个字节",{"2":{"86":1}}],["8bit",{"2":{"43":1}}],["8",{"2":{"34":1,"44":1,"107":1}}],["8及以上版本",{"2":{"28":1}}],["404",{"2":{"129":1}}],["40",{"2":{"85":1}}],["46",{"2":{"34":1}}],["45",{"2":{"34":1}}],["44",{"2":{"34":1}}],["43",{"2":{"34":1}}],["42",{"2":{"34":1}}],["41",{"2":{"34":1}}],["4",{"0":{"126":1},"1":{"127":1,"128":1},"2":{"34":1,"44":1,"48":1,"85":1,"97":1,"98":1,"118":1,"122":1,"129":1}}],["继续执行紧跟在循环或",{"2":{"34":1}}],["继承与实现",{"2":{"28":1}}],["继承是从已有的类中派生出新的类",{"2":{"26":1}}],["继承",{"0":{"26":1},"2":{"24":1,"27":1,"128":1}}],["或者用mysqldump",{"2":{"104":1}}],["或者在网络传输",{"2":{"79":1}}],["或者被终止",{"2":{"69":1}}],["或",{"2":{"34":2,"62":1}}],["或假",{"2":{"34":1}}],["循环",{"2":{"34":1}}],["循环控制和逻辑运算等场景",{"2":{"34":1}}],["和排它锁",{"2":{"106":1}}],["和非运行时异常",{"0":{"66":1}}],["和舍入行为",{"2":{"34":1}}],["和",{"0":{"57":1,"60":1,"65":1,"104":1},"1":{"105":1,"106":1},"2":{"34":2,"38":1,"53":1,"57":1,"65":1,"93":1,"111":2,"115":2}}],["如用户登录流程",{"2":{"129":1}}],["如统计",{"2":{"129":1}}],["如递归字符",{"2":{"119":1}}],["如段落",{"2":{"119":1}}],["如服务器宕机或者数据库进程异常退出",{"2":{"114":1}}],["如sql语句及其增删改操作的反向信息",{"2":{"113":1}}],["如数据页的变更",{"2":{"112":1}}],["如insert操作会记录相反的delete操作信息",{"2":{"112":1}}],["如共享锁",{"2":{"106":1}}],["如大于",{"2":{"106":1}}],["如等号=",{"2":{"106":1}}],["如能够自动在内存中创建自适应hash索引",{"2":{"103":1}}],["如雪花算法",{"2":{"100":1}}],["如有错误",{"2":{"94":1}}],["如不⽤泛型",{"2":{"71":1}}],["如何解决sql注入",{"2":{"101":1}}],["如何解决浮点数运算的精度丢失问题",{"0":{"47":1}}],["如何使用",{"0":{"68":1}}],["如何检查重复",{"2":{"53":1}}],["如果写入失败",{"2":{"115":1}}],["如果事务执行了一条insert语句",{"2":{"111":1}}],["如果加锁以后的表满足insert并发的情况下",{"2":{"104":1}}],["如果在插入数据时手动设置了自增",{"2":{"100":1}}],["如果发生错误导致事务回滚",{"2":{"100":1}}],["如果某些原因导致插入失败",{"2":{"100":1}}],["如果某个类没有实现接口",{"2":{"75":1}}],["如果",{"2":{"99":1,"115":1}}],["如果检查没问题就执行下一步",{"2":{"96":1}}],["如果有直接返回缓存结果",{"2":{"96":1}}],["如果有权限就会调用数据库引擎接口",{"2":{"96":1}}],["如果有权限",{"2":{"96":1}}],["如果有缓存这个",{"2":{"94":1}}],["如果有些字段不想进行序列化怎么办",{"0":{"81":1}}],["如果学号和课程编号组成联合主键",{"2":{"93":1}}],["如果一个表中包含学生信息和院校信息",{"2":{"93":1}}],["如果一个表中的",{"2":{"93":1}}],["如果一个程序必须在有安全限制的环境中运行",{"2":{"90":1}}],["如果一个对象既不是字符串",{"2":{"82":1}}],["如果一个对象",{"2":{"58":1}}],["如果用transient声明一个实例变量",{"2":{"81":1}}],["如果目标类没有实现接口",{"2":{"76":1}}],["如果目标类实现了接口",{"2":{"75":1}}],["如果当一个线程在执行",{"2":{"69":1}}],["如果没有权限就会返回错误信息",{"2":{"96":1}}],["如果没有权限",{"2":{"96":1}}],["如果没有命中",{"2":{"94":1}}],["如果没有",{"2":{"68":1,"96":1}}],["如果没有相符的",{"2":{"53":1}}],["如果子类没有覆盖该方法",{"2":{"67":1}}],["如果字符串常量池中不存在字符串对象",{"2":{"62":1}}],["如果该字符串已经存在池中",{"2":{"61":1}}],["如果不存在",{"2":{"61":1}}],["如果不相同",{"2":{"55":1}}],["如果不同的话",{"2":{"53":1}}],["如果重写",{"2":{"54":1}}],["如果两者相同",{"2":{"53":1}}],["如果我们想要得到一个对象的副本",{"2":{"50":1}}],["如果超出对应范围仍然会去创建新的对象",{"2":{"48":1}}],["如果这次回收还没有足够的内存才会抛出内存溢出异常",{"2":{"41":1}}],["如果你只是想运行java程序",{"2":{"38":1}}],["如jinfo",{"2":{"38":1}}],["如编译器和调试器等",{"2":{"38":1}}],["如文件读写",{"2":{"34":1}}],["如",{"2":{"34":1,"80":1,"81":1,"90":2,"101":1,"119":1,"129":1}}],["如内存泄露和空悬指针等问题",{"2":{"33":1}}],["39",{"2":{"34":1}}],["38",{"2":{"34":1}}],["37",{"2":{"34":1}}],["33",{"2":{"34":1}}],["32bit",{"2":{"43":2}}],["32",{"2":{"34":1}}],["31",{"2":{"34":1}}],["3",{"0":{"77":1},"2":{"34":1,"44":1,"70":1,"97":1,"98":1,"129":4}}],["通常在执行更新操作时使用",{"2":{"106":1}}],["通常情况下",{"2":{"47":1}}],["通常用于修饰一个方法",{"2":{"34":1}}],["通常是",{"2":{"34":1}}],["通常认为java比c++更容易学习和使用",{"2":{"33":1}}],["通过日志排查异常",{"2":{"129":1}}],["通过",{"2":{"117":1,"129":1}}],["通过分析器进行词法分析",{"2":{"96":1}}],["通过反射",{"2":{"88":1}}],["通过继承实现",{"2":{"76":1}}],["通过静态代理",{"2":{"73":1}}],["通过jvm翻译成机器码之后才能运行",{"2":{"36":1}}],["通过重载实现",{"2":{"27":1}}],["通过一个个方法的执行解决问题",{"2":{"19":1}}],["易用性和学习曲线",{"2":{"33":1}}],["多人协作",{"2":{"129":1}}],["多线程基础",{"2":{"128":1}}],["多线程操作字符串缓冲区下操作大量数据",{"2":{"57":1}}],["多版本并发控制",{"2":{"112":1}}],["多个节点可能同时分配自增",{"2":{"100":1}}],["多个类都是从如下",{"2":{"85":1}}],["多对多",{"2":{"92":1}}],["多处运行的原因所在",{"2":{"38":1}}],["多重继承和强制类型转换等",{"2":{"33":1}}],["多态是同一个行为具有多个不同表现形式的能力",{"2":{"27":1}}],["多态",{"0":{"27":1},"2":{"24":1,"128":1}}],["语言既具有编译型语言的特征",{"2":{"37":1}}],["语言",{"0":{"37":1}}],["语言特性",{"2":{"33":1}}],["语句会报错",{"2":{"101":1}}],["语句是否有语法错误",{"2":{"96":1}}],["语句的关键元素",{"2":{"96":1}}],["语句为",{"2":{"96":1}}],["语句就会经过分析器",{"2":{"94":1}}],["语句块肯定不会执行了",{"2":{"69":1}}],["语句块时",{"2":{"69":1}}],["语句块时被打断",{"2":{"69":1}}],["语句块可能不会执行",{"2":{"69":1}}],["语句块或者",{"2":{"69":2}}],["语句块将在方法返回之前被执行",{"2":{"68":1}}],["语句中的异常",{"2":{"34":1}}],["语句后面的代码",{"2":{"34":1}}],["语句时",{"2":{"34":1,"68":1}}],["语句",{"2":{"34":2}}],["语法和声明方式",{"2":{"28":1}}],["因此每次新纪录都要被插到现有索引页得中间某个位置",{"2":{"108":1}}],["因此会导致不连续",{"2":{"100":1}}],["因此当平台发生改变的时候",{"2":{"90":1}}],["因此称为",{"2":{"85":1}}],["因此如果某个类被标记为final",{"2":{"76":1}}],["因此将创建总共",{"2":{"62":1}}],["因此value数组不能改变",{"2":{"58":1}}],["因此value不可以指向其他对象",{"2":{"58":1}}],["因此是线程安全的",{"2":{"57":1}}],["因此",{"2":{"36":1,"90":1}}],["因此通常执行更快",{"2":{"33":1}}],["因为是循环写",{"2":{"115":1}}],["因为一次只有一个事务可以写入或修改表",{"2":{"105":1}}],["因为它允许更高的并行度",{"2":{"105":1}}],["因为它涉及更多底层的概念和复杂性",{"2":{"33":1}}],["因为序列化是针对对象而言的",{"2":{"83":1}}],["因为string的hash值经常会使用到",{"2":{"59":1}}],["因为字符串不可变",{"2":{"59":1}}],["因为两个相等的对象的",{"2":{"54":1}}],["因为集合的容器要求元素是",{"2":{"44":1}}],["因为",{"2":{"37":1,"93":1}}],["因为编译的结果不是机器码",{"2":{"36":1}}],["因为java代码在运行时需要通过jvm转换为机器码",{"2":{"33":1}}],["跨平台能力",{"2":{"33":1}}],["简化配置",{"2":{"129":2}}],["简化了内存管理",{"2":{"33":1}}],["简单部署",{"2":{"129":1}}],["简单来说",{"2":{"79":1,"117":1}}],["简单来说就是",{"2":{"72":1}}],["简单类型",{"2":{"43":1}}],["简而言之",{"2":{"30":2}}],["都会从",{"2":{"115":1}}],["都会回收掉只被弱引用关联的对象",{"2":{"41":1}}],["都是对sql语句进行预编译处理注意",{"2":{"101":1}}],["都是用于比较两个对象是否相等",{"2":{"53":1}}],["都是通过",{"2":{"47":1}}],["都必须在类中定义",{"2":{"33":1}}],["都可以包含抽象方法",{"2":{"28":1}}],["变量的值被设为初始值",{"2":{"81":1}}],["变量修饰符",{"2":{"81":1}}],["变量或者代码块",{"2":{"34":1}}],["变量",{"2":{"33":1,"128":1}}],["变量b指向对象的这种情况",{"2":{"32":1}}],["相比于静态代理来说",{"2":{"74":1}}],["相比之下",{"2":{"33":1}}],["相同",{"0":{"55":1}}],["相同的方法有不同的參数列表",{"2":{"27":1}}],["相应就大大提高了执行速度",{"2":{"53":1}}],["相等的对象是否真的相同",{"2":{"53":1}}],["相当于将基本类型包装起来",{"2":{"44":1}}],["相反",{"2":{"33":1}}],["只会记录未刷盘的日志",{"2":{"115":1}}],["只支持表级锁",{"2":{"104":1}}],["只维护一个代理类",{"2":{"73":1}}],["只能被截断",{"2":{"46":1}}],["只有两个值",{"2":{"43":1}}],["只有值传递",{"2":{"32":1}}],["只要crash后读取redo",{"2":{"115":1}}],["只要刷入磁盘的数据",{"2":{"115":1}}],["只要它们不冲突",{"2":{"105":1}}],["只要redolog",{"2":{"99":1}}],["只要其中一个表存在匹配",{"2":{"98":1}}],["只要强引用还存在",{"2":{"41":1}}],["只要在不同平台上安装对应的jvm",{"2":{"36":1}}],["只要你在编写完代码后",{"2":{"35":1}}],["只要有一个不同就叫做参数列表不同",{"2":{"22":1}}],["改变副本不影响原变量",{"2":{"32":1}}],["jsp",{"2":{"129":1}}],["jsexport",{"2":{"122":1}}],["jstack等",{"2":{"38":1}}],["join的区别",{"0":{"98":1}}],["join和right",{"0":{"98":1}}],["join",{"0":{"98":1},"2":{"98":5,"129":1}}],["jps",{"2":{"38":1}}],["jre是java的运行环境",{"2":{"38":1}}],["jre",{"0":{"38":1},"2":{"38":5}}],["jvm首先会检查字符串常量池",{"2":{"61":1}}],["jvm三者的关系",{"0":{"38":1}}],["jvm可以理解成一个软件",{"2":{"36":1}}],["jvm",{"2":{"33":1,"38":8,"61":1,"65":1,"74":2,"77":2,"90":1}}],["javase",{"2":{"129":1}}],["javascript",{"2":{"37":1}}],["java语言的关键字",{"2":{"81":1}}],["java泛型是jdk",{"2":{"71":1}}],["java赋值是复制对象引用",{"2":{"50":1}}],["java包装类型有8种",{"2":{"44":1}}],["java数据类型",{"0":{"42":1},"1":{"43":1,"44":1,"45":1,"46":1,"47":1,"48":1}}],["java对引用的概念进行了扩充",{"2":{"41":1}}],["java创建对象有以下几种方式",{"2":{"39":1}}],["java创建对象有几种方式",{"0":{"39":1}}],["java工具",{"2":{"38":1}}],["java虚拟机就是负责将字节码文件翻译成特定平台下的机器码",{"2":{"36":1}}],["java虚拟机",{"2":{"36":1}}],["java是通过jvm",{"2":{"36":1}}],["java是如何实现跨平台的",{"0":{"36":1}}],["java是一个强类型语言",{"2":{"35":1}}],["java是一门面向对象的编程语言",{"2":{"35":1}}],["java是一种纯粹的面向对象编程语言",{"2":{"33":1}}],["java要求显式的方法声明",{"2":{"35":1}}],["java具有稳健性",{"2":{"35":1}}],["java具有平台独立性和移植性",{"2":{"35":1}}],["java有一句口号",{"2":{"35":1}}],["java的基本数据类型有哪些",{"0":{"43":1}}],["java的4种引用类型",{"0":{"41":1}}],["java的特点",{"0":{"35":1}}],["java的一个主要优点是其跨平台能力",{"2":{"33":1}}],["java",{"0":{"37":1,"85":1,"125":1,"126":1},"1":{"126":1,"127":2,"128":2,"129":1},"2":{"34":2,"37":4,"38":8,"44":1,"65":4,"66":1,"79":3,"85":2,"88":1,"89":1,"128":2,"129":7}}],["java关键字和保留字",{"0":{"34":1}}],["java代码在任何安装了java虚拟机",{"2":{"33":1}}],["java自动进行垃圾回收",{"2":{"33":1}}],["java中的finally一定会被执行吗",{"0":{"69":1}}],["java中的所有代码",{"2":{"33":1}}],["java中类实例化顺序",{"2":{"40":1}}],["java中不存在引用传递",{"2":{"32":1}}],["java基础知识",{"0":{"31":1},"1":{"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1}}],["jdk动态代理的核心是invocationhandler接口和proxy类",{"2":{"75":1}}],["jdk动态代理",{"0":{"75":1}}],["jdk中还有一些好用的工具",{"2":{"38":1}}],["jdk目录下有个jre",{"2":{"38":1}}],["jdk",{"0":{"38":1},"2":{"28":1,"38":2,"128":1}}],["当数据库",{"2":{"115":1}}],["当redo",{"2":{"114":1}}],["当系统发生故障时",{"2":{"114":1}}],["当事务提交时",{"2":{"114":1}}],["当一个事务开始时",{"2":{"114":1}}],["当一页写满",{"2":{"108":1}}],["当使用范围条件查询时",{"2":{"106":1}}],["当前默认的存储引擎是",{"2":{"103":1}}],["当再传入",{"2":{"101":1}}],["当删除某条记录时",{"2":{"100":1}}],["当插入数据时",{"2":{"100":1}}],["当客户端连接",{"2":{"94":1}}],["当对象存储时",{"2":{"81":1}}],["当对象和它所引用的对象一起拷贝时即发生深拷贝",{"2":{"30":1}}],["当需要持久化",{"2":{"79":1}}],["当需要代理多个类的时候",{"2":{"73":1}}],["当接口需要增加",{"2":{"73":1}}],["当在",{"2":{"68":1}}],["当比较对象的数量很大的时候能提升效率",{"2":{"55":1}}],["当用其中的一个对象作为键保存到hashmap",{"2":{"54":1}}],["当你把对象加入",{"2":{"53":1}}],["当你在类",{"2":{"34":1}}],["当垃圾收集器工作时",{"2":{"41":1}}],["当遇到",{"2":{"34":1}}],["当父类的功能无法满足子类的需求",{"2":{"22":1}}],["并以二进制格式保存在磁盘上",{"2":{"111":1}}],["并管理连接的权限验证和维持",{"2":{"94":1}}],["并加载到",{"2":{"74":1,"77":1}}],["并且在默认情况下使用行级锁",{"2":{"105":1}}],["并且有较高的并发读写频率",{"2":{"103":1}}],["并且",{"2":{"103":1}}],["并且可以不需要针对每个目标类都创建一个代理类",{"2":{"77":1}}],["并且可以在目标方法执行前后做一些自己想做的事情",{"2":{"73":1}}],["并且也不需要我们必须实现接口",{"2":{"74":1}}],["并且为其添加了属性和方法",{"2":{"44":1}}],["并返回其引用",{"2":{"61":1}}],["并不是一个开发环境",{"2":{"38":1}}],["并不是原对象本身",{"2":{"32":1}}],["并不常见",{"2":{"34":1}}],["并非所有元素都必须是对象",{"2":{"33":1}}],["并拷贝属性指向的动态分配的内存",{"2":{"30":1}}],["并能扩展新的能力",{"2":{"26":1}}],["深拷贝把要复制的对象所引用的对象都复制了一遍",{"2":{"30":1}}],["深拷贝相比于浅拷贝速度较慢并且花销较大",{"2":{"30":1}}],["深拷贝会拷贝所有的属性",{"2":{"30":1}}],["深拷贝是一个整个独立的对象拷贝",{"2":{"30":1}}],["深拷贝",{"2":{"30":1}}],["深拷贝和浅拷贝区别了解吗",{"0":{"29":1},"1":{"30":1}}],["里面的对象",{"2":{"30":1}}],["主从复制以及数据备份",{"2":{"113":1}}],["主要用于系统崩溃后的恢复",{"2":{"113":1}}],["主要用于系统崩溃后的恢复和保证事务的持久性",{"2":{"112":1}}],["主要用于防止其他事务插入到这个范围内",{"2":{"106":1}}],["主要分为两步",{"2":{"94":1}}],["主要包括连接器",{"2":{"94":1}}],["主要目的是为了避免字符串的重复创建",{"2":{"61":1}}],["主要有以下几点原因",{"2":{"59":1}}],["主动抛出异常",{"2":{"34":1}}],["主",{"2":{"30":1}}],["即使redo",{"2":{"114":1}}],["即不能存在",{"2":{"93":1}}],["即不存在变量a指向变量b",{"2":{"32":1}}],["即",{"2":{"85":1}}],["即真",{"2":{"34":1}}],["即对象的浅拷贝会对",{"2":{"30":1}}],["即常量",{"2":{"28":1}}],["浅拷贝仅仅复制所考虑的对象",{"2":{"30":1}}],["浅拷贝",{"2":{"30":1}}],["静态代理在编译时就将接口",{"2":{"77":1}}],["静态代理中",{"2":{"77":1}}],["静态代理和动态代理的对比",{"0":{"77":1}}],["静态代理实现简单",{"2":{"73":1}}],["静态代理实现步骤",{"2":{"73":1}}],["静态代理优缺点",{"2":{"73":1}}],["静态代理",{"0":{"73":1},"2":{"73":1}}],["静态代码块",{"2":{"40":1}}],["静态属性",{"2":{"40":1}}],["静态成员",{"2":{"28":1}}],["静态多态性",{"2":{"27":1}}],["抽象方法必须为public或者protected",{"2":{"28":1}}],["访问修饰符",{"2":{"28":1}}],["构造函数",{"2":{"28":1}}],["构造方法",{"2":{"40":1,"128":1}}],["构造方法不能被",{"2":{"23":1}}],["构造方法特点如下",{"2":{"23":1}}],["构造方法有哪些特点",{"0":{"23":1}}],["成员变量",{"2":{"28":1,"128":1}}],["而有业务逻辑的字段做主键",{"2":{"108":1}}],["而表级锁在操作少量数据时更为高效",{"2":{"105":1}}],["而innodb在特定情况下也会使用表级锁",{"2":{"105":1}}],["而innodb支持",{"2":{"104":1}}],["而innodb",{"2":{"104":2}}],["而server层通过api调用这些功能",{"2":{"94":1}}],["而院校地址和电话又依赖于所在院校",{"2":{"93":1}}],["而动态代理的实现也依赖反射",{"2":{"89":1}}],["而动态代理是在运行时动态生成类字节码",{"2":{"77":1}}],["而手动去根据不同编码去拼接则不方便",{"2":{"86":1}}],["而字符流是为了应对汉字出现的情况",{"2":{"86":1}}],["而根据数据的处理方式又分为字节流和字符流",{"2":{"85":1}}],["而",{"2":{"83":1,"115":1}}],["而throw的话",{"2":{"70":1}}],["而throw只能一个",{"2":{"70":1}}],["而throw用于方法内部",{"2":{"70":1}}],["而且有字节缓冲流",{"2":{"86":1}}],["而且也没有实现serializable接口的话",{"2":{"82":1}}],["而且没有侵入原代码",{"2":{"73":1}}],["而且string没有对外提供修改内部状态的方法",{"2":{"58":1}}],["而且计算机在表示一个数字时",{"2":{"46":1}}],["而不是范围查询",{"2":{"106":1}}],["而不是自增",{"2":{"100":1}}],["而不是仅依赖于其中之一",{"2":{"93":1}}],["而不是开发java程序的话",{"2":{"38":1}}],["而不能只依赖于主键的一部分",{"2":{"93":1}}],["而不复制它所引用的对象",{"2":{"30":1}}],["而是先进入准备状态",{"2":{"97":1}}],["而是经过虚拟机间接与操作系统交互",{"2":{"38":1}}],["而是通过该类的方法实现对隐藏信息的操作和访问",{"2":{"25":1}}],["而实现这种特性的正是java虚拟机jvm",{"2":{"35":1}}],["而在自动拆箱的过程中",{"2":{"45":1}}],["而在",{"2":{"34":1}}],["而java设计上避免了这些可能导致混淆和错误的特性",{"2":{"33":1}}],["而c++既支持面向过程编程",{"2":{"33":1}}],["而所有的对其他对象的引用仍然指向原来的对象",{"2":{"30":1}}],["而非抽象方法有具体的实现代码",{"2":{"28":1}}],["而抽象类可以有静态代码块和静态方法",{"2":{"28":1}}],["而抽象类可以有构造函数",{"2":{"28":1}}],["而抽象类可以包含抽象方法和非抽象方法",{"2":{"28":1}}],["而抽象类可以定义各种类型的成员变量",{"2":{"28":1}}],["而抽象类使用abstract关键字进行声明",{"2":{"28":1}}],["不具备",{"2":{"115":1}}],["不一样",{"2":{"115":1}}],["不一定",{"2":{"69":1}}],["不包括查询语句",{"2":{"113":1}}],["不包含具体的实现代码",{"2":{"28":1}}],["不管事务是否提交都会记录下来",{"2":{"111":1}}],["不管是文件读写还是网络发送接收",{"2":{"86":1}}],["不容易保证有序插入",{"2":{"108":1}}],["不涉及挪动记录",{"2":{"108":1}}],["不提供事务支持",{"2":{"104":1}}],["不会回退",{"2":{"100":1}}],["不会造成精度丢失",{"2":{"47":1}}],["不连续的问题",{"2":{"100":1}}],["不连续的原因可能有以下几点",{"2":{"100":1}}],["不连续",{"0":{"100":1},"2":{"100":1}}],["不匹配的返回null",{"2":{"98":2}}],["不直接提交",{"2":{"97":1}}],["不过",{"2":{"90":2}}],["不需要必须实现接口",{"2":{"77":1}}],["不需要自己编写",{"2":{"75":1}}],["不需要重新计算",{"2":{"59":1}}],["不易维护",{"2":{"73":1}}],["不然编译报错",{"2":{"70":1}}],["不然编译不通过",{"2":{"66":1}}],["不受检查异常",{"2":{"65":1}}],["不是线程安全的",{"2":{"57":1}}],["不可变的特性使得",{"2":{"59":1}}],["不可变",{"2":{"57":2}}],["不用单独安装jre",{"2":{"38":1}}],["不同的存储引擎如innodb",{"2":{"94":1}}],["不同的平台有不同的版本",{"2":{"36":1}}],["不同平台下编译生成的字节码是一样的",{"2":{"36":1}}],["不同点",{"2":{"28":1}}],["不能防止sql注入",{"2":{"101":1}}],["不能存在传递依赖",{"2":{"93":1}}],["不能改变对象内的成员变量",{"2":{"58":1}}],["不能改变状态的意思是",{"2":{"58":1}}],["不能再改变它的状态",{"2":{"58":1}}],["不能被修改或继承",{"2":{"34":1}}],["不能定义普通成员变量",{"2":{"28":1}}],["不允许外部程序直接访问",{"2":{"25":1}}],["这台机器会通过redo",{"2":{"97":1}}],["这不符合1nf",{"2":{"93":1}}],["这可能导致代码功能失调并破坏可移植性",{"2":{"90":1}}],["这是非常麻烦的",{"2":{"77":1}}],["这是非常不负责任的方式",{"2":{"70":1}}],["这是静态代理的一个优点",{"2":{"73":1}}],["这是一个标记接口",{"2":{"50":1}}],["这样的话",{"2":{"73":1}}],["这样的方法将对象转换回原始类型的值",{"2":{"45":1}}],["这样就可以在不修改原目标对象的前提下",{"2":{"72":1}}],["这样就大大减少了equals比较的次数",{"2":{"55":1}}],["这样",{"2":{"54":1}}],["这样我们就大大减少了",{"2":{"53":1}}],["这时会调用",{"2":{"53":1}}],["这应该是一种约定",{"2":{"50":1}}],["这",{"2":{"48":1}}],["这也就是解释了为什么浮点数没有办法用二进制精确表示",{"2":{"46":1}}],["这也是java的魅力所在",{"2":{"35":1}}],["这个有限大小的日志文件里删除",{"2":{"115":1}}],["这个过程被称为",{"2":{"114":1}}],["这个过程是异步进行的",{"2":{"114":1}}],["这个记录包含了修改的类型",{"2":{"114":1}}],["这个哈希码的作用是确定该对象在哈希表中的索引位置",{"2":{"52":1}}],["这个和计算机保存浮点数的机制有很大关系",{"2":{"46":1}}],["这个jar包就可以在不同的平台上运行了",{"2":{"35":1}}],["这类的引用",{"2":{"41":1}}],["这4种引用强度依次逐渐减弱",{"2":{"41":1}}],["这种锁对于高并发环境下的数据库性能是非常有益的",{"2":{"105":1}}],["这种类文件可以在虚拟机上执行",{"2":{"38":1}}],["这种字节码必须由",{"2":{"37":1}}],["这就是为什么",{"2":{"115":1}}],["这就是java能够跨平台",{"2":{"38":1}}],["这就形成了传递依赖",{"2":{"93":1}}],["这就简化了出错处理和恢复的任务",{"2":{"35":1}}],["这就导致更可靠的程序",{"2":{"35":1}}],["这就称为方法重载",{"2":{"22":1}}],["这些redo",{"2":{"114":1}}],["这些锁模式可以与行锁结合使用",{"2":{"106":1}}],["这些都是因为你可以基于反射分析类",{"2":{"89":1}}],["这些框架中也大量使用了动态代理",{"2":{"89":1}}],["这些场景都需要用到序列化",{"2":{"79":1}}],["这些异常发生时",{"2":{"65":1}}],["这些方法好像会改变string对象",{"2":{"59":1}}],["这些严格的要求保证编译程序能捕捉调用错误",{"2":{"35":1}}],["这些抽象方法需要由继承或实现它们的类来提供具体的实现",{"2":{"28":1}}],["这一中间步骤会引入性能开销",{"2":{"33":1}}],["这提供了更高的控制能力",{"2":{"33":1}}],["共同点",{"2":{"28":1}}],["运用反序列化手段",{"2":{"39":1}}],["运行流程",{"2":{"128":1}}],["运行时异常",{"0":{"66":1}}],["运行时环境",{"2":{"38":1}}],["运行java程序必须有jvm的支持",{"2":{"36":1}}],["运行我们编写的java程序",{"2":{"36":1}}],["运行期间判断所引用对象的实际类型",{"2":{"27":1}}],["运算符",{"2":{"20":1,"128":1}}],["做出不同的处理",{"2":{"27":1}}],["父类引用指向子类对象",{"2":{"27":1}}],["在线博客系统",{"2":{"129":1}}],["在线课程",{"2":{"129":1}}],["在合适的时机推荐相关课程和服务",{"2":{"117":1}}],["在大语言模型生成回答之前",{"2":{"117":1}}],["在事务执行过程中",{"2":{"114":1}}],["在事务中插入数据时",{"2":{"100":1}}],["在数据库崩溃后通过重放日志保证已提交事务的修改不会丢失",{"2":{"112":1}}],["在数据量达到几十g的时候就相对麻烦了",{"2":{"104":1}}],["在实际使用中",{"2":{"106":1}}],["在实际应用中",{"2":{"105":1}}],["在备份和恢复时可单独针对某个表进行操作",{"2":{"104":1}}],["在一些对server端发起的请求参数中植入一些sql代码",{"2":{"101":1}}],["在不影响性能的前提下",{"2":{"100":1}}],["在不修改程序代码的情况下改变程序运行时绑定的代码",{"2":{"27":1}}],["在分布式系统中",{"2":{"100":2}}],["在进行数据库备份和恢复时",{"2":{"100":1}}],["在恢复数据时",{"2":{"99":1}}],["在内存中查询是否有结果",{"2":{"96":1}}],["在执行前会再次检查权限",{"2":{"94":1}}],["在学生成绩表中",{"2":{"93":1}}],["在utf",{"2":{"86":1}}],["在gbk中汉字占2个字节",{"2":{"86":1}}],["在序列化时就会抛出notserializableexception异常",{"2":{"82":1}}],["在序列化的时候其值会被忽略",{"2":{"81":1}}],["在被反序列化后",{"2":{"81":1}}],["在子类对象中增强目标类",{"2":{"76":1}}],["在子类中重写父类的方法",{"2":{"27":1}}],["在编译阶段将通知织入java字节码中",{"2":{"73":1}}],["在控制台上打印",{"2":{"67":1}}],["在创建字符串时",{"2":{"61":1}}],["在它创建完成之后",{"2":{"58":1}}],["在集合类中",{"2":{"44":1}}],["在系统将要发生内存溢出异常之前",{"2":{"41":1}}],["在程序代码之中普遍存在的",{"2":{"41":1}}],["在java1",{"2":{"41":1}}],["在java中是单继承的",{"2":{"26":1}}],["在",{"2":{"34":2,"65":1}}],["在c++中",{"2":{"33":1}}],["也不会触发叶子节点的分裂",{"2":{"108":1}}],["也会被跳过",{"2":{"100":1}}],["也成功",{"2":{"99":1}}],["也增加了安全问题",{"2":{"90":1}}],["也称编译时增强",{"2":{"73":1}}],["也称为散列码",{"2":{"52":1}}],["也要申明抛出异常或者捕获",{"2":{"70":1}}],["也无法通过虚引用来取得一个对象实例",{"2":{"41":1}}],["也就是各个槽对应的记录在页面中的地址偏移量",{"2":{"107":1}}],["也就是bufferedoutputstream",{"2":{"86":1}}],["也就是被private修饰",{"2":{"58":1}}],["也就是jdk中已经集成了",{"2":{"38":1}}],["也就是说只",{"2":{"103":1}}],["也就是说",{"2":{"101":1,"114":1,"115":1}}],["也就是说被transient修饰的成员变量",{"2":{"81":1}}],["也就是说如果",{"2":{"54":1}}],["也就是说class文件并不直接与机器的操作系统交互",{"2":{"38":1}}],["也就是说一个子类只有一个父类",{"2":{"26":1}}],["也有windows",{"2":{"38":1}}],["也具有解释型语言的特征",{"2":{"37":1}}],["也支持面向对象编程",{"2":{"33":1}}],["也可以系一个气球",{"2":{"20":1}}],["200",{"2":{"129":1}}],["2之后",{"2":{"41":1}}],["27",{"2":{"34":1}}],["26",{"2":{"34":1}}],["23",{"2":{"34":1}}],["21",{"2":{"34":1}}],["2^7",{"2":{"34":2}}],["2",{"0":{"76":1,"97":1,"120":1},"2":{"26":1,"34":1,"44":1,"58":1,"62":2,"70":1,"73":1,"97":1,"98":1,"129":4}}],["良好的封装能够减少耦合",{"2":{"25":1}}],["封装就是将类的信息隐藏在类内部",{"2":{"25":1}}],["封装",{"0":{"25":1},"2":{"24":1,"128":1}}],["重构项目",{"2":{"129":1}}],["重做日志缓冲区",{"2":{"114":1}}],["重做日志",{"2":{"111":1,"114":1}}],["重载",{"2":{"23":1,"128":1}}],["重载是面向对象的一个基本特性",{"2":{"22":1}}],["重写的话一般按照属性是否相等去比较",{"2":{"51":1}}],["重写",{"2":{"23":1,"27":1}}],["但需知基础",{"2":{"129":1}}],["但需要更多的工作来适应不同的系统和编译器",{"2":{"33":1}}],["但",{"2":{"115":1}}],["但没有一个标志让",{"2":{"115":1}}],["但在高并发场景下可能会成为瓶颈",{"2":{"105":1}}],["但在整个系统中可能会出现不连续的情况",{"2":{"100":1}}],["但会限制并发性",{"2":{"105":1}}],["但编译器不会报错",{"2":{"70":1}}],["但它们的功能和应用场景不同",{"2":{"112":1}}],["但它们在多个方面存在显著差异",{"2":{"33":1}}],["但它的可见范围是protected的",{"2":{"50":1}}],["但这也意味着c++程序更接近硬件层面",{"2":{"33":1}}],["但也可能导致不可预测的gc暂停时间",{"2":{"33":1}}],["但也增加了出错的风险",{"2":{"33":1}}],["但不会复制主对象里面的对象",{"2":{"30":1}}],["但不能用",{"2":{"23":1}}],["但只能继承一个抽象类",{"2":{"28":1}}],["但是这个时候binlog并没有记录该数据",{"2":{"97":1}}],["但是这样会产生过多的代理类",{"2":{"73":1}}],["但是这样就导致代理类过于庞大",{"2":{"73":1}}],["但是如果发现有相同",{"2":{"53":1}}],["但是它的强度比软引用更弱一些",{"2":{"41":1}}],["但是同一段代码在编译后的字节码是一样的",{"2":{"38":1}}],["但是由jvm翻译成的机器码却不一样",{"2":{"36":1}}],["但是可以",{"2":{"23":1}}],["但是有不同的参数列表",{"2":{"22":1}}],["名字与类名相同",{"2":{"23":1}}],["参数占位符",{"2":{"101":1}}],["参数的顺序",{"2":{"22":1}}],["参数的个数",{"2":{"22":1}}],["参数列表又叫参数签名",{"2":{"22":1}}],["条绳子系住一个气球",{"2":{"20":1}}],["ny8ikbiosottcgtymqbjlul9gmod0p0tjlzdmnbv70",{"2":{"117":1}}],["number",{"2":{"114":1}}],["null",{"2":{"81":1}}],["name",{"2":{"97":3}}],["native",{"2":{"34":1}}],["noclassdeffounderror",{"2":{"65":1}}],["n",{"2":{"20":2,"119":1}}],["newinstance",{"2":{"39":1}}],["new",{"0":{"62":1},"2":{"20":2,"37":4,"41":1}}],["个综合项目",{"2":{"129":1}}],["个",{"2":{"119":1}}],["个核心步骤",{"2":{"118":1}}],["个抽象类基类中派生出来的",{"2":{"85":1}}],["个字符串对象",{"2":{"62":2}}],["个引用指向它",{"2":{"20":1}}],["个对象",{"2":{"20":1}}],["个或",{"2":{"20":1}}],["1时当作一个整体",{"2":{"101":1}}],["1001",{"2":{"101":1}}],["18",{"2":{"34":1}}],["17",{"2":{"34":1}}],["16bit",{"2":{"43":2}}],["16",{"2":{"34":1}}],["14",{"2":{"34":1}}],["12",{"2":{"34":1}}],["127",{"2":{"34":1,"48":2}}],["128",{"2":{"34":1,"48":1}}],["1",{"0":{"75":1,"96":1,"119":1},"2":{"20":1,"25":1,"34":3,"43":1,"44":1,"58":1,"62":1,"70":1,"73":1,"97":2,"98":1,"101":1,"129":1}}],["0",{"0":{"126":1},"1":{"127":1,"128":1},"2":{"20":1,"48":1,"81":1}}],["一",{"0":{"126":1,"127":1},"1":{"127":1,"128":2},"2":{"129":4}}],["一种是更新",{"2":{"95":1}}],["一种是查询",{"2":{"95":1}}],["一是表必须有一个主键",{"2":{"93":1}}],["一对多",{"2":{"92":1}}],["一对一",{"2":{"92":1}}],["一般用于传入数据库对象",{"2":{"101":1}}],["一般会选择线程终止",{"2":{"65":1}}],["一般情况下",{"2":{"37":1}}],["一次编写",{"2":{"35":1}}],["一个是追加写",{"2":{"115":1}}],["一个是循环写",{"2":{"115":1}}],["一个数据页大致划分七个部分",{"2":{"107":1}}],["一个",{"2":{"89":1}}],["一个类浏览器需要可以枚举类的成员",{"2":{"90":1}}],["一个类只有实现了serializable接口",{"2":{"82":1}}],["一个类可以实现多个接口",{"2":{"28":1}}],["一个访问权限修饰符",{"2":{"34":3}}],["一个对象序列化的接口",{"2":{"82":1}}],["一个对象是否有虚引用存在",{"2":{"41":1}}],["一个对象可以有",{"2":{"20":1}}],["一个对象引用可以指向",{"2":{"20":1}}],["一根绳子可以不系气球",{"2":{"20":1}}],["一位在校大学生",{"0":{"1":1}}],["创建",{"2":{"129":1}}],["创建一个代理类同样实现这个接口",{"2":{"73":1}}],["创建一个对象用什么运算符",{"0":{"20":1}}],["创建了数值在",{"2":{"48":1}}],["创建对象",{"2":{"39":1}}],["创建对象实例",{"2":{"20":1}}],["面向过程把解决问题的过程拆成一个个方法",{"2":{"19":1}}],["面向对象编程",{"2":{"128":1}}],["面向对象性",{"2":{"33":1}}],["面向对象三大特性",{"0":{"24":1},"1":{"25":1,"26":1,"27":1},"2":{"24":1}}],["面向对象会先抽象出对象",{"2":{"19":1}}],["面向对象和面向过程是一种软件开发思想",{"2":{"19":1}}],["面向对象和面向过程的区别",{"0":{"19":1}}],["面向对象基础",{"0":{"18":1},"1":{"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1}}],["www",{"2":{"129":1}}],["web",{"2":{"129":3}}],["weak",{"2":{"41":1}}],["wiki",{"2":{"129":1}}],["with",{"2":{"122":1}}],["window一句一句的将代码解释",{"2":{"37":1}}],["window会通过解释器open",{"2":{"37":1}}],["window将源代码一次性翻译成可被该平台执行的机器码",{"2":{"37":1}}],["window",{"2":{"37":1}}],["where",{"2":{"97":1}}],["while",{"2":{"34":2,"128":1}}],["writer",{"2":{"85":1}}],["write",{"2":{"35":1}}],["warning",{"2":{"11":6,"17":6,"123":6}}],["works",{"2":{"2":1}}],["点击我记得我记得我看京东娃娃福娃i急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急急",{"2":{"10":1,"16":1}}],["世界等级单位觉得的复合快进到佛教文化",{"2":{"9":1}}],["测试工具可以利用反射来自动地调用类里定义的可被发现的",{"2":{"90":1}}],["测试",{"0":{"8":1,"14":1},"1":{"9":1,"10":1,"11":1,"15":1,"16":1,"17":1}}],["oop",{"2":{"128":1}}],["o",{"0":{"86":1},"2":{"86":1}}],["o流",{"0":{"84":1},"1":{"85":1,"86":1}}],["org",{"2":{"129":2}}],["oracle",{"2":{"129":2}}],["order",{"2":{"101":1}}],["or",{"2":{"48":1,"101":1}}],["obj",{"2":{"41":1}}],["object对象有个clone",{"2":{"50":1}}],["object常用方法有",{"2":{"50":1}}],["object常用方法有哪些",{"0":{"50":1}}],["object",{"0":{"49":1,"60":1},"1":{"50":1,"51":1,"52":1,"53":1,"54":1,"55":1},"2":{"41":2,"44":1,"50":1,"60":1,"72":1}}],["objectinputstream对象的readobject",{"2":{"39":1}}],["once",{"2":{"35":1}}],["overload",{"2":{"23":1}}],["override",{"0":{"23":1},"2":{"23":1}}],["outofmemoryerror",{"2":{"65":1}}],["outputstream",{"2":{"85":1}}],["output",{"2":{"11":1,"17":1,"85":1,"122":1,"123":1}}],["out",{"2":{"7":1,"124":1}}],["of",{"2":{"2":2,"7":1,"121":1,"124":1}}],["rabbitmq",{"2":{"129":1}}],["rag",{"0":{"116":1,"117":1,"118":1},"1":{"117":1,"118":1,"119":2,"120":2},"2":{"117":4,"118":1}}],["rollback",{"2":{"129":1}}],["right",{"2":{"98":1}}],["rdb",{"2":{"92":1}}],["rpc",{"2":{"80":1}}],["requestmapping",{"2":{"129":1}}],["retrieval",{"2":{"117":1}}],["return",{"2":{"68":1,"122":2}}],["record进行清理",{"2":{"114":1}}],["record就会被标记为",{"2":{"114":1}}],["record被写入到redo",{"2":{"114":1}}],["record重新执行这些事务的修改操作",{"2":{"114":1}}],["record来恢复未完成的事务",{"2":{"114":1}}],["record还没有被写入到磁盘上的redo",{"2":{"114":1}}],["record写入到redo",{"2":{"114":1}}],["records",{"2":{"107":1}}],["record",{"2":{"106":1,"114":1}}],["redo",{"0":{"110":1,"114":1,"115":1},"1":{"111":1,"112":1,"113":1,"114":1,"115":1},"2":{"111":4,"112":3,"113":3,"114":5,"115":12}}],["redolog",{"2":{"99":2}}],["redis",{"2":{"80":1,"129":8}}],["relational",{"2":{"92":1}}],["reflection",{"2":{"88":1}}],["reference",{"2":{"41":4}}],["reader",{"2":{"85":1}}],["real",{"2":{"72":1}}],["replaceall这些操作的方法",{"2":{"59":1}}],["replace",{"2":{"59":1,"63":1}}],["results",{"0":{"3":1},"1":{"4":1,"5":1,"6":1},"2":{"2":1}}],["rust",{"2":{"37":1}}],["runnable",{"2":{"128":1}}],["run",{"2":{"35":1}}],["runtimeexception由程序错误导致",{"2":{"66":1}}],["runtimeexception",{"0":{"66":1}}],["runtime",{"0":{"2":1},"1":{"3":1,"4":1,"5":1,"6":1,"7":1},"2":{"2":1,"7":1,"38":1}}],["==比较的是它们的存放地址",{"2":{"51":1}}],["==比较的是他们的值",{"2":{"51":1}}],["=",{"0":{"62":1},"2":{"2":1,"38":2,"41":1,"97":2,"101":1}}],["features",{"2":{"122":1}}],["free",{"2":{"107":1}}],["frontmatter",{"0":{"6":1},"2":{"2":3,"6":1}}],["from",{"2":{"2":1,"129":1}}],["floating",{"2":{"34":1}}],["float",{"2":{"34":1,"43":2,"44":1}}],["first",{"2":{"129":1}}],["filereader",{"2":{"128":1}}],["fileinputstream",{"2":{"128":1}}],["file",{"2":{"107":2}}],["files",{"2":{"2":1}}],["finally语句",{"2":{"35":1}}],["finally",{"0":{"68":1},"2":{"34":2,"68":4,"69":2,"128":1}}],["final",{"2":{"34":1,"58":1,"128":1}}],["false",{"2":{"34":1,"43":1,"48":1}}],["full",{"2":{"7":1,"98":1,"124":1}}],["for",{"2":{"2":1,"7":1,"34":1,"124":1,"128":1}}],["value注解就读取到配置文件中的值呢",{"2":{"89":1}}],["value数组用final修饰",{"2":{"58":1}}],["virtual",{"2":{"38":1,"65":1}}],["vitepress",{"2":{"2":2,"121":1,"122":1}}],["void",{"2":{"23":1,"34":1,"67":1}}],["vue",{"2":{"2":1}}],["merge",{"2":{"129":1}}],["memory",{"2":{"103":1}}],["mvc",{"2":{"129":1}}],["mvcc比单纯的加锁更高效",{"2":{"104":1}}],["mvn",{"2":{"129":1}}],["msg",{"2":{"122":2}}],["myisam和memory存储引擎采用表级锁",{"2":{"105":1}}],["myisam不支持聚集索引",{"2":{"104":1}}],["myisam不支持",{"2":{"104":2}}],["myisam数据是以文件的形式存储",{"2":{"104":1}}],["myisam",{"0":{"104":1},"1":{"105":1,"106":1},"2":{"103":1,"104":2}}],["myisam通过这些api与server层交互",{"2":{"94":1}}],["mysql还支持多种锁模式",{"2":{"106":1}}],["mysql中常用的四种存储引擎分别是",{"2":{"103":1}}],["mysql",{"0":{"99":1},"2":{"94":1,"100":1,"103":1,"129":6}}],["mysql主要分为",{"2":{"94":1}}],["mysql的架构",{"0":{"94":1}}],["mysql是一个关系型数据库",{"2":{"92":1}}],["mysql基础",{"0":{"91":1},"1":{"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1}}],["mybatis中",{"2":{"101":2}}],["mybatis",{"2":{"89":1,"129":6}}],["maven",{"2":{"129":5}}],["markdown",{"0":{"121":1},"1":{"122":1,"123":1,"124":1},"2":{"121":1,"124":1}}],["mapper",{"2":{"129":1}}],["map",{"2":{"59":1}}],["machineerror",{"2":{"65":1}}],["machine",{"2":{"38":1}}],["main",{"2":{"2":1,"34":1}}],["more",{"0":{"7":1,"124":1}}],["md```js",{"2":{"122":1}}],["md",{"2":{"2":2,"123":1}}],["if",{"2":{"128":1}}],["id",{"0":{"100":1,"108":1},"2":{"97":2,"100":11}}],["idea",{"2":{"128":2,"129":2}}],["ide",{"2":{"90":1,"128":1}}],["i",{"0":{"84":1,"86":1},"1":{"85":1,"86":1},"2":{"86":1,"129":1}}],["ioc",{"2":{"129":1}}],["io",{"0":{"85":1},"2":{"39":1,"85":4,"128":1,"129":2}}],["ieee",{"2":{"34":1}}],["implements",{"2":{"34":1}}],["import",{"2":{"2":1}}],["is",{"2":{"11":9,"17":9,"123":10}}],["index",{"2":{"129":2}}],["indexof",{"2":{"63":1}}],["inimum+supermum",{"2":{"107":1}}],["insert",{"2":{"129":2}}],["insert语句都会给表自动加锁",{"2":{"104":1}}],["instanceof",{"2":{"34":1}}],["inner",{"0":{"98":1},"2":{"98":1}}],["innodb会给符合条件的所有行加上间隙锁",{"2":{"106":1}}],["innodb支持聚集索引",{"2":{"104":1}}],["innodb支持",{"2":{"104":1}}],["innodb内部做了很多优化",{"2":{"103":1}}],["innodb是mysql默认的事务型存储引擎",{"2":{"103":1}}],["innodb存储引擎可以通过redo",{"2":{"114":1}}],["innodb存储引擎就会将这个修改作为一个",{"2":{"114":1}}],["innodb存储引擎会定期地将redo",{"2":{"114":1}}],["innodb存储引擎会将redo",{"2":{"114":1}}],["innodb存储引擎会为这个事务分配一个连续的",{"2":{"114":1}}],["innodb存储引擎会使用redo",{"2":{"111":1}}],["innodb存储引擎支持行级锁",{"2":{"105":1}}],["innodb存储引擎",{"2":{"103":1}}],["innodb",{"0":{"104":1,"107":1,"108":1},"1":{"105":1,"106":1},"2":{"97":1,"103":4,"115":2}}],["into",{"2":{"129":1}}],["intellij",{"2":{"128":1}}],["interrupted",{"2":{"69":1}}],["interpret",{"2":{"37":1}}],["integer等类型放⼊list中",{"2":{"71":1}}],["integer",{"2":{"44":1,"48":1}}],["int",{"2":{"43":2,"44":1,"52":1,"81":1,"128":1}}],["info",{"2":{"11":4,"17":4,"123":4}}],["inputstream",{"2":{"85":1}}],["input",{"2":{"11":1,"17":1,"85":1,"122":1,"123":1}}],["in",{"2":{"2":1,"37":4,"121":1}}],["it",{"2":{"2":1}}],["crud",{"2":{"129":1}}],["create",{"2":{"129":1}}],["crash",{"0":{"115":1},"2":{"115":2}}],["cookie",{"2":{"129":1}}],["com",{"2":{"129":2}}],["compaction",{"2":{"114":1}}],["component注解就声明了一个类为",{"2":{"89":1}}],["commit",{"2":{"99":1,"129":2}}],["code",{"2":{"76":1}}],["controller",{"2":{"129":2}}],["containers",{"0":{"11":1,"17":1,"123":1}}],["const",{"2":{"2":1}}],["cglib是通过继承的方式做的动态代理",{"2":{"76":1}}],["cglib动态代理",{"0":{"76":1}}],["cglib",{"2":{"74":1,"76":1}}],["clean",{"2":{"129":1}}],["clone",{"2":{"50":2}}],["class的类文件",{"2":{"38":1}}],["class文件",{"2":{"35":1}}],["class",{"2":{"34":1,"36":1,"37":1,"77":1}}],["c",{"2":{"34":1,"37":1}}],["chunks",{"2":{"119":1}}],["charat",{"2":{"63":1}}],["character",{"2":{"44":1,"48":1}}],["char",{"2":{"34":2,"43":2}}],["checkedexecption",{"0":{"66":1}}],["checked",{"2":{"65":1,"66":2}}],["check",{"2":{"7":1,"124":1}}],["catch块",{"2":{"68":1}}],["catch",{"0":{"68":1},"2":{"34":6,"35":1,"65":2,"68":3,"69":2,"128":1}}],["can",{"2":{"2":1}}],["c++",{"2":{"34":1,"37":1}}],["c++的学习曲线更陡峭",{"2":{"33":1}}],["c++拥有一些java不支持的特性",{"2":{"33":1}}],["c++代码直接编译成机器码",{"2":{"33":1}}],["c++代码则通常需要针对每个目标平台重新编译",{"2":{"33":1}}],["c++通常提供比java更快的执行速度",{"2":{"33":1}}],["c++允许程序员直接管理内存",{"2":{"33":1}}],["c++和java都是广泛使用的编程语言",{"2":{"33":1}}],["c++和java的区别",{"0":{"33":1}}],["custom",{"0":{"11":1,"17":1,"123":1}}],["current",{"2":{"2":1}}],["druid",{"2":{"129":1}}],["directory",{"2":{"107":1}}],["dopost",{"2":{"129":1}}],["doget",{"2":{"129":1}}],["docker",{"2":{"129":1}}],["docs",{"2":{"129":2}}],["documentation",{"2":{"7":1,"124":1}}],["doublevalue",{"2":{"45":1}}],["double",{"2":{"34":1,"43":2,"44":2}}],["do",{"2":{"34":1}}],["djkakdk1kjk1成交价大家积极",{"2":{"13":1}}],["debug",{"2":{"129":1}}],["default",{"2":{"122":2}}],["delete",{"2":{"104":1}}],["development",{"2":{"38":1}}],["details",{"2":{"11":2,"17":2,"123":4}}],["demonstrates",{"2":{"2":1,"121":1}}],["dao",{"2":{"129":1}}],["dangerous",{"2":{"11":2,"17":2,"123":2}}],["danger",{"2":{"11":2,"17":2,"123":2}}],["database",{"2":{"92":1,"129":1}}],["data",{"0":{"4":1,"5":1},"2":{"2":3,"122":2}}],["swagger",{"2":{"129":1}}],["switch",{"2":{"34":3,"128":1}}],["ssm",{"2":{"129":4}}],["shiro",{"2":{"129":1}}],["shiki",{"2":{"122":1}}],["short",{"2":{"43":2,"44":1,"48":1}}],["syntax",{"0":{"122":1},"2":{"122":1}}],["synchronized",{"2":{"34":1,"57":1}}],["safe",{"0":{"115":1},"2":{"115":1}}],["s锁",{"2":{"106":1}}],["snowflake",{"2":{"100":1}}],["sql语句只认为where后面只有一个条件",{"2":{"101":1}}],["sql语句在mysql中的执行过程",{"0":{"95":1},"1":{"96":1,"97":1}}],["sql注入的原理是将sql代码伪装到输入参数中",{"2":{"101":1}}],["sql",{"2":{"94":2,"95":1,"96":3,"101":1,"129":4}}],["security",{"2":{"129":1}}],["session",{"2":{"129":1}}],["sequence",{"2":{"114":1}}],["select",{"2":{"104":1,"129":2}}],["select语句",{"2":{"94":1}}],["setter",{"2":{"128":1}}],["set",{"2":{"97":1}}],["setup>",{"2":{"2":1}}],["service",{"2":{"129":1}}],["servlet",{"2":{"129":1}}],["server端在执行sql操作时",{"2":{"101":1}}],["server层会对其进行身份认证和权限校验",{"2":{"94":1}}],["server",{"2":{"94":3}}],["serializable接口也仅仅只是做一个标记用",{"2":{"82":1}}],["serializable",{"0":{"82":1}}],["space",{"2":{"107":1}}],["springboot",{"2":{"129":3}}],["springmvc",{"2":{"129":2}}],["spring",{"2":{"75":1,"89":4,"129":6}}],["spring的aop使用了两种动态代理",{"2":{"74":1}}],["split",{"2":{"63":1}}],["substring",{"2":{"63":1}}],["super",{"2":{"34":1,"128":1}}],["s",{"0":{"62":1}}],["soft",{"2":{"41":1}}],["some",{"2":{"2":1,"121":1}}],["started",{"2":{"129":2}}],["static",{"0":{"83":1},"2":{"34":1,"83":1,"128":1}}],["string对象创建之后",{"2":{"59":1}}],["string对象其实在内部就是一个个字符",{"2":{"58":1}}],["string是不可变的",{"2":{"58":1}}],["string类内部所有的字段都是私有的",{"2":{"58":1}}],["stringbuilder",{"2":{"57":3,"128":1}}],["stringbuilder区别",{"0":{"57":1}}],["stringbuffer",{"0":{"57":1},"2":{"57":3}}],["string",{"0":{"56":1,"57":1,"58":1,"60":1,"62":2,"63":1},"1":{"57":1,"58":1,"59":2,"60":1,"61":1,"62":1,"63":1},"2":{"57":3,"60":2,"61":2,"67":3,"128":2,"129":1}}],["strict",{"2":{"34":1}}],["strictfp",{"2":{"34":2}}],["strong",{"2":{"41":1}}],["script>",{"2":{"2":1}}],["script",{"2":{"2":1}}],["site",{"2":{"2":1}}],["autowired",{"2":{"129":1}}],["augmented",{"2":{"117":1}}],["arraylist",{"2":{"128":1}}],["archive",{"2":{"103":1}}],["additional",{"2":{"122":1}}],["ai",{"2":{"117":4}}],["acid",{"2":{"92":1,"129":1}}],["access",{"2":{"2":1}}],["apache",{"2":{"129":1}}],["applet",{"2":{"90":1}}],["apis",{"2":{"2":1,"7":1}}],["api",{"0":{"2":1},"1":{"3":1,"4":1,"5":1,"6":1,"7":1},"2":{"2":1,"90":1,"128":1}}],["aop会选择使用cglib来动态代理目标类",{"2":{"76":1}}],["aop会选择使用jdk动态代理目标类",{"2":{"75":1}}],["abc",{"0":{"62":1},"2":{"62":1}}],["abstract",{"2":{"28":1,"34":1}}],["a",{"2":{"11":7,"17":7,"93":1,"123":8}}],["anywhere",{"2":{"35":1}}],["an",{"2":{"11":2,"17":2,"123":2}}],["and",{"2":{"2":2}}],["table",{"2":{"129":1}}],["tutorial",{"2":{"129":2}}],["trailer",{"2":{"107":1}}],["transient关键字",{"0":{"81":1}}],["transient",{"2":{"34":1,"81":1}}],["trim",{"2":{"63":1}}],["try块",{"2":{"68":1}}],["try",{"0":{"68":1},"2":{"34":3,"68":2,"69":2,"128":1}}],["true",{"0":{"55":1},"2":{"34":1,"43":1,"48":1}}],["tip",{"2":{"11":4,"17":4,"123":4}}],["token",{"2":{"119":1}}],["touppercase",{"2":{"63":1}}],["tolowercase",{"2":{"63":1}}],["tostring",{"2":{"50":2,"67":1}}],["to",{"2":{"2":1}}],["thread",{"2":{"128":1}}],["throw和throws的区别",{"0":{"70":1}}],["throwable",{"0":{"67":1},"2":{"65":2,"67":2}}],["throws抛出异常时",{"2":{"70":1}}],["throws可以一次性抛出多个异常",{"2":{"70":1}}],["throws用于方法头",{"2":{"70":1}}],["throws",{"2":{"34":1}}],["throw",{"2":{"34":1}}],["theme",{"0":{"4":1},"2":{"2":4,"4":1}}],["the",{"2":{"2":3,"7":2,"121":1,"124":2}}],["this",{"2":{"2":1,"11":9,"17":9,"34":1,"121":1,"123":10,"128":1}}],["branch",{"2":{"129":1}}],["break",{"2":{"34":2}}],["built",{"2":{"121":1}}],["buffer中的redo",{"2":{"114":2}}],["buffer",{"2":{"114":1}}],["bufferedinputstream",{"2":{"86":1}}],["b",{"2":{"93":2,"129":3}}],["bin",{"0":{"110":1,"113":1},"1":{"111":1,"112":1,"113":1,"114":1,"115":1},"2":{"111":3,"113":3}}],["binlog主要用于数据备份和主从同步",{"2":{"111":1}}],["binlog事务是否成功",{"2":{"99":1}}],["binlog",{"0":{"115":1},"2":{"99":2,"104":1,"115":6}}],["binlog日志没有被写入",{"2":{"97":1}}],["binglog",{"2":{"94":1}}],["bigdecimal",{"2":{"47":2}}],["bit",{"2":{"43":1}}],["block",{"2":{"11":1,"17":1,"123":2}}],["boot",{"2":{"89":1}}],["boolean",{"2":{"34":2,"43":2,"44":1,"48":1,"128":1}}],["box",{"2":{"11":2,"17":2,"123":2}}],["both",{"2":{"2":1}}],["bean",{"2":{"89":1,"129":1}}],["be",{"2":{"2":1}}],["byte",{"2":{"34":2,"43":2,"44":1,"48":1,"63":1}}],["by",{"2":{"2":1,"101":1,"121":1,"122":1,"129":1}}],["pull",{"2":{"129":1}}],["push",{"2":{"129":1}}],["public",{"2":{"34":2}}],["package",{"2":{"129":1}}],["path",{"2":{"128":1}}],["page",{"0":{"5":1,"6":1},"2":{"2":7,"5":1,"107":2,"121":1}}],["pdf",{"2":{"119":1}}],["pom",{"2":{"129":2}}],["powered",{"2":{"122":1}}],["pool",{"2":{"61":1}}],["point",{"2":{"34":1}}],["phantom",{"2":{"41":1}}],["php",{"2":{"37":1}}],["python",{"2":{"37":1}}],["preparedstatement具有预编译功能",{"2":{"101":1}}],["preparedstatement预编译防止sql注入",{"2":{"101":1}}],["prepare",{"2":{"99":1}}],["pre>",{"2":{"2":6}}],["printstacktrace",{"2":{"67":1}}],["private",{"2":{"34":1,"128":1}}],["provides",{"2":{"122":1}}],["provided",{"2":{"2":1,"121":1}}],["protected",{"2":{"34":1}}]],"serializationVersion":2}';export{t as default};
